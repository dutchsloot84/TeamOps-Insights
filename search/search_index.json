{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#releasecopilot-ai-docs","title":"releasecopilot-ai Docs","text":"<p>Welcome! This site documents the architecture and implementation details for releasecopilot-ai, a modular, AWS-deployable AI release audit tool that integrates with Jira and Bitbucket, with future Agent + RAG capabilities.</p> <ul> <li>Start with Architecture \u2192 Overview for a guided tour.</li> <li>Diagrams are authored in Mermaid and rendered live.</li> </ul>"},{"location":"#local-preview","title":"Local Preview","text":"<p><pre><code>python -m venv .venv\nsource .venv/bin/activate   # Windows: .venv\\Scripts\\activate\npip install -r requirements-docs.txt || pip install mkdocs mkdocs-material pymdown-extensions\nmkdocs serve\n</code></pre> Open the URL printed in the terminal (usually http://127.0.0.1:8000).</p>"},{"location":"CI-CDK-Preflight/","title":"CDK Workflow Preflight Checklist","text":"<p>The <code>cdk-ci</code> GitHub Actions workflow performs a lightweight preflight before running <code>cdk list</code>, <code>cdk synth</code>, or other AWS CDK commands. The checks confirm the repository uses a single root-level <code>cdk.json</code> and that the configured entry point exists before invoking the CDK CLI.</p>"},{"location":"CI-CDK-Preflight/#what-the-preflight-checks","title":"What the preflight checks","text":"<ol> <li>Repository layout \u2013 <code>scripts/ci/verify_cdk_root_layout.sh</code> ensures    <code>cdk.json</code> lives at the repository root, extracts the <code>app</code> command, and    verifies that the referenced entry file exists. The guard also blocks nested    <code>infra/cdk/infra/cdk</code> directories that previously caused confusion.</li> <li>Language dependencies \u2013 The workflow installs Python requirements from    <code>requirements.txt</code> (when present) and <code>infra/cdk/requirements.txt</code> before    running the CDK CLI from the repository root.</li> <li>CLI execution \u2013 With the layout verified, the workflow runs <code>npx cdk    list</code>, <code>npx cdk synth</code>, and, when credentials are available, <code>npx cdk diff</code>    and <code>npx cdk deploy --require-approval never</code>.</li> </ol>"},{"location":"CI-CDK-Preflight/#local-debugging-tips","title":"Local debugging tips","text":"<p>Run the same checks locally from the repository root:</p> <pre><code>./scripts/ci/verify_cdk_root_layout.sh\npython -m venv .venv &amp;&amp; source .venv/bin/activate\npython -m pip install -r infra/cdk/requirements.txt\nnpx cdk list\n</code></pre> <p>If the <code>cdk list</code> command fails locally, execute the <code>app</code> command printed by the verification script (for example <code>python -m infra.cdk.app</code>) to inspect the underlying stack trace before retrying the CDK CLI.</p>"},{"location":"agent_research/","title":"Agent Framework Comparison: LangGraph vs crewAI","text":""},{"location":"agent_research/#langgraph","title":"LangGraph","text":"<p>Pros</p> <ul> <li>Built on top of LangChain primitives, making it familiar to teams already using LangChain components.</li> <li>Supports declarative graph orchestration with explicit state transitions, enabling deterministic agent flows.</li> <li>Strong tooling ecosystem (LangSmith, LangServe) for monitoring and deployment.</li> <li>Active community and rapid iteration from the LangChain maintainers.</li> </ul> <p>Cons</p> <ul> <li>Requires adopting LangChain abstractions (tools, chains) even when a lighter-weight approach might suffice.</li> <li>Graph definitions can become verbose for very large workflows.</li> <li>Relatively young API; breaking changes are still possible.</li> </ul> <p>Best-fit scenarios</p> <ul> <li>When you need guardrails and deterministic behaviour across multi-step agent workflows.</li> <li>When leveraging LangChain integrations (vector stores, retrievers) is a priority.</li> </ul>"},{"location":"agent_research/#crewai","title":"crewAI","text":"<p>Pros</p> <ul> <li>Focuses on collaborative agent teams with role-based prompts out of the box.</li> <li>Simple YAML/JSON configuration for defining agents and shared goals.</li> <li>Lightweight abstraction that can wrap existing Python callables without heavy framework dependencies.</li> </ul> <p>Cons</p> <ul> <li>Less mature orchestration features; complex control flow requires custom code.</li> <li>Smaller community and ecosystem compared to LangChain.</li> <li>Limited observability tooling; relies on custom logging for production debugging.</li> </ul> <p>Best-fit scenarios</p> <ul> <li>Rapid prototyping of small agent teams with distinct roles.</li> <li>When you prefer to avoid LangChain dependencies and want a minimal layer over raw LLM calls.</li> </ul>"},{"location":"agent_research/#recommendation","title":"Recommendation","text":"<p>For ReleaseCopilot-AI, LangGraph is the recommended option. The audit workflow benefits from deterministic state transitions (intake \u2192 matching \u2192 export), and the integration with LangChain tooling unlocks observability and deployment capabilities that crewAI currently lacks. crewAI remains a good fit for lightweight experiments, but LangGraph offers the structure required for production-grade automation.</p>"},{"location":"architecture/","title":"Architecture Overview","text":"<p>This page narrates the key components of releasecopilot-ai and links to live Mermaid diagrams.</p> <ul> <li>System Context: High-level ecosystem and integrations</li> <li>Components: Internal modules and data flow between them</li> <li>Data Flow: End-to-end audit sequence (CLI/UI \u2192 Jira/Bitbucket \u2192 Export)</li> <li>AWS Deployment: Infra layout with Lambda/ECS, S3, Secrets Manager, IAM</li> <li>Agents: Future orchestration (LangGraph/crewAI), MCP memory, RAG search</li> </ul> <p>Navigate via the left sidebar to see each diagram.</p>"},{"location":"aws-setup/","title":"AWS baseline and CDK migration","text":""},{"location":"aws-setup/#manual-setup-recap","title":"Manual setup recap","text":"<p>The initial Release Copilot proof-of-concept relied on a manually provisioned IAM execution role with temporary <code>AdministratorAccess</code>/<code>FullAccess</code> policies, an S3 bucket configured for artifact storage, and Secrets Manager entries for Jira and Bitbucket OAuth credentials. Those steps enabled the prototype but left broad permissions in place and required console-driven configuration management.</p>"},{"location":"aws-setup/#cdk-managed-equivalent","title":"CDK-managed equivalent","text":"<p>The new CDK <code>CoreStack</code> codifies those resources with least-privilege defaults:</p> <ul> <li>S3 artifacts bucket \u2014 server-side encrypted with AWS-managed keys, versioned, and non-public. Lifecycle management moves <code>raw/</code> objects to Standard-IA after 30 days and deletes them after 90 days, while <code>reports/</code> objects move to Standard-IA after 60 days and are retained indefinitely.</li> <li>Secrets \u2014 existing Jira and Bitbucket secrets can be imported by ARN; when omitted the stack creates placeholders using <code>SecretStringGenerator</code> so synthesis/deployment succeed without pre-provisioned secrets.</li> <li>Lambda execution role \u2014 grants only the actions required to write logs, list the bucket within the <code>releasecopilot/</code> prefix, read/write prefixed objects, and fetch the two exact secrets. The Lambda receives environment variables (<code>RC_S3_BUCKET</code>, <code>RC_S3_PREFIX</code>, <code>RC_USE_AWS_SECRETS_MANAGER</code>) that mirror the manual configuration but are now centrally defined.</li> <li>Outputs \u2014 expose the bucket name and Lambda identifiers for downstream wiring. An optional EventBridge schedule driven by the <code>scheduleEnabled</code>/<code>scheduleCron</code> context flags can trigger the audit Lambda on a cadence without altering these foundations.</li> </ul>"},{"location":"aws-setup/#migration-guidance","title":"Migration guidance","text":"<ol> <li>Deploy the CDK stack in a sandbox account and validate artifact uploads, secret retrieval, and Lambda execution logs.</li> <li>Once validated, deploy to the production account. The stack will create or import the necessary secrets, enforce lifecycle policies, and provision the least-privilege execution role.</li> <li>After the production deployment is confirmed, detach the temporary <code>FullAccess</code> policies from the original console-managed role or switch workloads to the CDK-managed role entirely.</li> </ol>"},{"location":"aws-setup/#quick-runbook","title":"Quick runbook","text":"<pre><code># one-time setup\npython -m venv .venv &amp;&amp; source .venv/bin/activate  # Windows: .venv\\Scripts\\Activate\npip install -r infra/cdk/requirements.txt\nnpx --yes cdk bootstrap\n\n# synth &amp; test\npytest -q\nnpx --yes cdk synth\n\n# deploy with defaults\nnpx --yes cdk deploy --require-approval never\n\n# override context for real bucket + secrets\nnpx --yes cdk deploy \\\n  --context region=us-west-2 \\\n  --context bucketName=releasecopilot-artifacts-slv \\\n  --context jiraSecretArn=arn:aws:secretsmanager:us-west-2:ACCOUNT:secret:/releasecopilot/jira-XXXX \\\n  --context bitbucketSecretArn=arn:aws:secretsmanager:us-west-2:ACCOUNT:secret:/releasecopilot/bitbucket-YYYY\n</code></pre>"},{"location":"aws-setup/#quick-runbook-cloudwatch-alarms","title":"Quick runbook: CloudWatch alarms","text":"<pre><code>source .venv/bin/activate  # Windows: .venv\\Scripts\\Activate\nnpx --yes cdk synth\n\n# deploy without email\nnpx --yes cdk deploy --require-approval never\n\n# deploy with email notifications\nnpx --yes cdk deploy --context alarmEmail=you@example.com --require-approval never\n\n# smoke test: cause a Lambda error, re-invoke, then check CloudWatch Alarms\n</code></pre>"},{"location":"aws-setup/#optional-eventbridge-schedule","title":"Optional EventBridge schedule","text":"<p>The stack can create an EventBridge rule that invokes the ReleaseCopilot Lambda on a cron schedule. The feature is disabled by default so the stack stays simple unless you explicitly opt in.</p> <pre><code>source .venv/bin/activate  # Windows: .venv\\Scripts\\Activate\n\n# enable the default 6:30\u202fPM Phoenix schedule (cron(30 1 * * ? *))\nnpx --yes cdk deploy --context scheduleEnabled=true --require-approval never\n\n# customize the cadence\nnpx --yes cdk deploy \\\n  --context scheduleEnabled=true \\\n  --context scheduleCron=\"cron(0 14 * * ? *)\" \\\n  --require-approval never\n\n# disable and clean up the rule on the next deploy\nnpx --yes cdk deploy --context scheduleEnabled=false --require-approval never\n</code></pre>"},{"location":"ci-cd-least-priv/","title":"Least-Privilege CDK Deployments","text":"<p>This guide walks through the path from the initial broad-deployment permissions to a locked-down IAM role driven by inline policies.</p>"},{"location":"ci-cd-least-priv/#policy-artifacts","title":"Policy artifacts","text":"<p>The repository provides policy templates under <code>infra/iam/policies/</code>:</p> <ul> <li><code>cfn.json</code> \u2013 CloudFormation permissions scoped to <code>arn:aws:cloudformation:${aws:Region}:${aws:AccountId}:stack/ReleaseCopilot-*/*</code>.</li> <li><code>s3_bootstrap.json</code> \u2013 Grants access to the bootstrap bucket <code>cdk-hnb659fds-assets-${aws:AccountId}-${aws:Region}</code> for publishing CDK assets.</li> <li><code>logs.json</code> \u2013 Initial wildcard permissions for Lambda log groups prefixed with <code>/aws/lambda/releasecopilot-*</code>.</li> <li><code>dynamodb.json</code> \u2013 Access to the <code>ReleaseCopilot-Reports</code> table and any secondary indexes.</li> <li><code>secrets.json</code> \u2013 Manage Secrets Manager secrets prefixed with <code>releasecopilot/</code>.</li> <li><code>passrole.json</code> \u2013 Allows passing IAM roles named <code>ReleaseCopilot-*</code>.</li> </ul> <p>These templates use <code>${aws:AccountId}</code> and <code>${aws:Region}</code> variables so they can be attached directly as inline policies or further refined.</p>"},{"location":"ci-cd-least-priv/#generating-least-privilege-variants","title":"Generating least-privilege variants","text":"<p>Once the diagnostic job has reported the exact resource names, populate <code>infra/iam/resources.json</code> with the concrete values (log groups, DynamoDB tables, secrets, roles). Then run:</p> <pre><code>python scripts/compose_policies.py --resources infra/iam/resources.json --output-dir infra/iam/policies/generated\n</code></pre> <p>The script writes files such as <code>logs.least-priv.json</code> and <code>dynamodb.least-priv.json</code> in the <code>generated/</code> directory with resources narrowed to those discovered at runtime.</p>"},{"location":"ci-cd-least-priv/#attaching-the-inline-policies","title":"Attaching the inline policies","text":"<p>Assuming the deploy role ARN is available in <code>${ROLE_ARN}</code>, attach the policies in order:</p> <pre><code>aws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotCloudFormation --policy-document file://infra/iam/policies/cfn.json\naws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotBootstrap --policy-document file://infra/iam/policies/s3_bootstrap.json\naws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotLogs --policy-document file://infra/iam/policies/generated/logs.least-priv.json\naws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotDynamoDB --policy-document file://infra/iam/policies/generated/dynamodb.least-priv.json\naws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotSecrets --policy-document file://infra/iam/policies/generated/secrets.least-priv.json\naws iam put-role-policy --role-name &lt;deploy-role-name&gt; --policy-name ReleaseCopilotPassRole --policy-document file://infra/iam/policies/generated/passrole.least-priv.json\n</code></pre> <p>Tip: Replace the <code>generated/</code> file paths with the base templates while the diagnostic job is still running. Once the least-privilege data is known, regenerate and re-run the commands above.</p>"},{"location":"ci-cd-least-priv/#detaching-broad-managed-policies","title":"Detaching broad managed policies","text":"<p>After the inline policies are in place, remove the managed policies that were used for the bootstrap deploy:</p> <pre><code>aws iam detach-role-policy --role-name &lt;deploy-role-name&gt; --policy-arn arn:aws:iam::aws:policy/CloudWatchLogsFullAccess\naws iam detach-role-policy --role-name &lt;deploy-role-name&gt; --policy-arn arn:aws:iam::aws:policy/SecretsManagerReadWrite\naws iam detach-role-policy --role-name &lt;deploy-role-name&gt; --policy-arn arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess\n</code></pre> <p>Re-run the <code>cdk-ci</code> workflow (or <code>npm run cdk:deploy</code>) to confirm that deploys succeed with the inline policies only. Keep the diagnostic job enabled until you have validated at least one successful deployment with the restricted permissions.</p>"},{"location":"ci-cd-least-priv/#historian","title":"Historian","text":"<ul> <li>Decisions \u2013 Store reusable inline policy JSON in the repository and use <code>scripts/compose_policies.py</code> to tailor resource ARNs.</li> <li>Notes \u2013 <code>infra/iam/resources.json</code> should be updated after each diagnostic run so the generated policies stay aligned with deployed resources.</li> <li>Actions \u2013 Remove the diagnostic job from <code>.github/workflows/cdk-ci.yml</code> once least-privilege enforcement is validated.</li> </ul>"},{"location":"ci-cd/","title":"ReleaseCopilot CI/CD","text":"<p>This document captures how the ReleaseCopilot infrastructure is validated and deployed with AWS CDK using GitHub Actions and OpenID Connect (OIDC).</p>"},{"location":"ci-cd/#overview","title":"Overview","text":"<ul> <li>The CDK application lives in <code>infra/cdk</code> and is executed via <code>python -m infra.cdk.app</code> as declared in the root <code>cdk.json</code>.</li> <li>GitHub Actions authenticates to AWS via the repository variable <code>OIDC_ROLE_ARN</code> and the <code>aws-actions/configure-aws-credentials</code> action.</li> <li>The workflow file <code>.github/workflows/cdk-ci.yml</code> runs validation on every pull request and performs full deploys on pushes to <code>main</code> and semantic tags.</li> </ul>"},{"location":"ci-cd/#local-workflows","title":"Local workflows","text":""},{"location":"ci-cd/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.11 (or newer) with <code>pip</code></li> <li>Node.js 20+ to run the AWS CDK CLI through <code>npx</code></li> </ul> <p>From the repository root you can run:</p> <pre><code>npm run cdk:list\nnpm run cdk:synth\nnpm run cdk:deploy:all\n</code></pre> <p>These commands run in the <code>infra/cdk</code> directory and invoke the wrapper so that <code>python</code> vs. <code>python3</code> differences do not matter.</p> <p>If you need to troubleshoot interpreter mismatches, execute:</p> <pre><code>cd infra/cdk\npython scripts/preflight.py\n</code></pre> <p>The preflight script prints the Python binary path, version, and operating system before re-executing <code>app.py</code>.</p>"},{"location":"ci-cd/#github-actions-workflow","title":"GitHub Actions workflow","text":"<p>The <code>cdk-ci</code> workflow contains two jobs:</p> <ol> <li>validate \u2013 installs dependencies, runs the preflight diagnostics, assumes the deploy role via OIDC, and executes <code>cdk list</code>, <code>cdk synth</code>, and <code>cdk diff</code>. The synthesized output is uploaded as a build artifact when available.</li> <li>deploy \u2013 triggered on pushes to <code>main</code> or tags matching <code>v*</code>; it re-installs dependencies, assumes the same role, and runs <code>cdk deploy --require-approval never --all</code>.</li> </ol> <p>Every job sets <code>permissions: id-token: write</code> and <code>contents: read</code>, and uses the repository variable <code>OIDC_ROLE_ARN</code> for the role to assume. The <code>Who am I</code> step runs <code>aws sts get-caller-identity</code> so you can confirm the workflow assumed the expected role. npm run cdk:venv npm run cdk:list npm run cdk:synth npm run cdk:diff npm run cdk:deploy ```</p> <p>These commands operate from the repository root and rely on CDK's default discovery of the root-level <code>cdk.json</code>. The <code>cdk:venv</code> helper bootstraps a virtual environment with the CDK dependencies, and the remaining scripts call the CDK CLI directly so local developers and CI use the exact same entry point.</p>"},{"location":"ci-cd/#github-actions-workflow_1","title":"GitHub Actions workflow","text":"<p>The <code>cdk-ci</code> workflow runs a single job named validate-and-deploy. It checks out the repository, installs Node.js 20 and Python 3.11, and installs any Python dependencies from <code>requirements.txt</code> and <code>infra/cdk/requirements.txt</code>. A guard script (<code>scripts/ci/verify_cdk_root_layout.sh</code>) confirms the root <code>cdk.json</code> points at a real entry file before CDK commands run.</p> <p>The job executes <code>npx cdk list</code> and <code>npx cdk synth</code> on every run. When the repository variable <code>OIDC_ROLE_ARN</code> is populated, the workflow assumes that role via <code>aws-actions/configure-aws-credentials@v4</code>, performs <code>npx cdk diff</code>, and, for pushes to <code>main</code> or <code>v*</code> tags, deploys the stacks non-interactively with <code>npx cdk deploy --require-approval never</code>.</p>"},{"location":"ci-cd/#troubleshooting","title":"Troubleshooting","text":"Symptom Suggested fix <code>cdk list</code> prints usage information Ensure you are running commands from the repository root so that the root-level <code>cdk.json</code> is discovered. <code>Could not load credentials</code> in CI Confirm the <code>OIDC_ROLE_ARN</code> repository variable is set and that the workflow still has <code>permissions: id-token: write</code>. Access denied when uploading CDK assets Verify the inline policy created from <code>infra/iam/policies/s3_bootstrap.json</code> (or generated via <code>scripts/compose_policies.py</code>) is attached to the deploy role."},{"location":"ci-cd/#changelog","title":"Changelog","text":"<ul> <li>2024-10-02 \u2013 Simplified the workflow to run from the repository root with Node.js 20, introduced a root-layout verification script, and consolidated validation and deployment into a single job.</li> <li>2024-05-19 \u2013 Added a preflight guard in <code>.github/workflows/cdk-ci.yml</code> that checks for <code>cdk.json</code>, prints the resolved app command, installs dependencies, and runs <code>cdk doctor</code> before executing verbose <code>cdk list</code>.</li> <li>2024-05-18 \u2013 Removed the temporary diagnostic inventory job after validating least-privilege deploys. See the successful deploy run for confirmation.</li> </ul>"},{"location":"ci-cd/#historian","title":"Historian","text":"<ul> <li>Decisions \u2013 Adopted OIDC for all CDK deploys and centralized on a single <code>cdk-ci</code> workflow.</li> <li>Notes \u2013 Diagnostic inventory output is no longer collected automatically; refer to the retained IAM policy templates for least-privilege updates.</li> <li>Actions \u2013 Continue to maintain the inline policies generated from <code>scripts/compose_policies.py</code> and adjust permissions as new infrastructure components are introduced.</li> </ul>"},{"location":"cli-usage/","title":"CLI Usage","text":"<p>Release Copilot exposes a subcommand-oriented CLI under the <code>rc</code> entry point. The first supported workflow, <code>rc audit</code>, rebuilds release audit artifacts entirely from cached Jira and Bitbucket payloads. This keeps the pipeline deterministic and enables teams to reproduce historical audits without hitting live APIs.</p> <pre><code>rc audit \\\n  --cache-dir temp_data \\\n  --json dist/audit.json \\\n  --xlsx dist/audit.xlsx \\\n  --scope fixVersion=2025.09.20\n</code></pre> <p>The command reads cached payloads from <code>temp_data/</code>, generates JSON and Excel artifacts in <code>dist/</code>, and records the fix version in the execution scope. The scope is included in structured logs and S3 metadata to support Historian traceability.</p>"},{"location":"cli-usage/#defaults-and-configuration","title":"Defaults and configuration","text":"<p>Both the CLI and the Lambda entry points rely on the shared defaults loader in <code>src/config/loader.py</code>. The loader resolves the project root, cache directory, artifact directory, and reports directory by looking at environment overrides first and falling back to conventional locations:</p> <ul> <li><code>RC_ROOT</code> \u2192 project root (default: repository root)</li> <li><code>RC_CACHE_DIR</code> \u2192 cached payloads (default: <code>&lt;root&gt;/temp_data</code>)</li> <li><code>RC_ARTIFACT_DIR</code> \u2192 generated artifacts (default: <code>&lt;root&gt;/dist</code>)</li> <li><code>RC_REPORTS_DIR</code> \u2192 published reports (default: <code>&lt;root&gt;/reports</code>)</li> </ul> <p>The loader also exposes the default export formats (<code>json,excel</code>). These values are injected into the <code>rc audit</code> execution plan to keep the CLI and the Lambda in sync.</p>"},{"location":"cli-usage/#command-reference","title":"Command reference","text":"Flag Description <code>--cache-dir</code> Directory containing the cached JSON payloads required for exports. <code>--json</code> Destination path for the regenerated JSON artifact. <code>--xlsx</code> Destination path for the regenerated Excel workbook. <code>--summary</code> Destination path for the summary JSON payload. <code>--scope</code> Repeatable <code>key=value</code> metadata entries describing the audit scope. <code>--upload</code> Optional S3 URI (<code>s3://bucket/prefix</code>) to receive the generated artifacts. <code>--region</code> AWS region used for uploads (defaults to <code>AWS_REGION</code>/<code>AWS_DEFAULT_REGION</code>). <code>--dry-run</code> Print the execution plan and exit without touching the filesystem. <code>--log-level</code> Logging verbosity (<code>INFO</code> by default). <p>Pass <code>--dry-run</code> to validate paths, scope metadata, and upload destinations. The command returns a JSON payload describing the planned outputs without reading or writing files. This is useful for CI pipelines where you want to confirm the execution plan before mounting caches.</p>"},{"location":"cli-usage/#cached-payload-expectations","title":"Cached payload expectations","text":"<p><code>rc audit</code> expects four JSON files in the cache directory:</p> <ul> <li><code>stories.json</code> \u2192 stories without commits</li> <li><code>commits.json</code> \u2192 orphan commit payloads</li> <li><code>links.json</code> \u2192 commit-to-story mappings</li> <li><code>summary.json</code> \u2192 aggregated metrics</li> </ul> <p>These files are produced by the data collection phases of the legacy pipeline and retained by Historian. Missing or corrupt payloads cause the command to exit with a helpful error explaining which file needs to be recovered.</p> <p>If the cache is available but the original export step failed, use <code>recover_and_export.py</code> as a convenience wrapper. It calls the same exporter under the hood but accepts separate knobs for selecting formats.</p>"},{"location":"cli-usage/#uploading-artifacts-to-s3","title":"Uploading artifacts to S3","text":"<p>When <code>--upload</code> is provided, the CLI stages the generated artifacts in a temporary directory and calls <code>releasecopilot.uploader.upload_directory</code> to push them to Amazon S3. Each object is encrypted with SSE-S3 and tagged with:</p> <ul> <li><code>artifact=rc-audit</code></li> <li><code>scope=&lt;JSON encoded scope&gt;</code></li> </ul> <p>This mirrors the Lambda metadata and makes it straightforward for Historian to associate uploads with a specific audit scope.</p>"},{"location":"cli-usage/#logging","title":"Logging","text":"<p>Log messages use the shared configuration in <code>releasecopilot.logging_config</code>. Scope metadata is included in structured log fields, while secret values remain redacted thanks to the existing logging filters.</p>"},{"location":"deployment/","title":"Deployment Guide","text":"<p>This guide covers deploying ReleaseCopilot-AI workloads and infrastructure.</p>"},{"location":"deployment/#application-containers","title":"Application Containers","text":"<p>Local development uses Docker Compose (<code>docker-compose.yml</code>) to orchestrate services for integration testing. Refer to the root README for detailed steps.</p>"},{"location":"deployment/#aws-cdk-deployment","title":"AWS CDK Deployment","text":""},{"location":"deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li>AWS account with permissions to deploy the stacks.</li> <li>Python 3.12 and AWS CDK v2 installed.</li> <li>Bootstrapped environment: <code>cdk bootstrap</code>.</li> </ul>"},{"location":"deployment/#local-workflow","title":"Local Workflow","text":"<pre><code>python -m venv .venv &amp;&amp; source .venv/bin/activate  # Windows: .venv\\\\Scripts\\\\Activate\npip install -r infra/cdk/requirements.txt\nnpx --yes cdk synth\nnpx --yes cdk diff\nnpx --yes cdk deploy ReleaseCopilot-&lt;env&gt;-Core\n</code></pre> <p>Tip: The <code>&lt;env&gt;</code> context defaults to <code>dev</code>. Override it with <code>cdk synth -c env=staging</code> (or any other value) to produce a differently named stack.</p> <p>The unified <code>ReleaseCopilot-&lt;env&gt;-Core</code> stack provisions:</p> <ul> <li>An artifacts S3 bucket (<code>ArtifactsBucket</code>) scoped to the account, with lifecycle   rules for raw and report prefixes.</li> <li>Secrets Manager secrets for Jira, Bitbucket, and an optional webhook signing   secret, reused across runtimes when ARNs are not supplied via context.</li> <li>A Python 3.11 ReleaseCopilot Lambda function plus API Gateway, DynamoDB table,   and reconciliation/background Lambda components.</li> <li>CloudWatch alarms, optional EventBridge schedules, and SQS DLQ support for the   reconciliation workflow.</li> </ul> <p>Enable the optional EventBridge driven sync during deployment by passing the CDK context flag:</p> <pre><code>npx --yes cdk deploy ReleaseCopilot-&lt;env&gt;-Core -c scheduleEnabled=true\n</code></pre>"},{"location":"deployment/#continuous-integration","title":"Continuous Integration","text":"<ul> <li>CI (<code>cdk-synth</code> job): synthesises the CDK app on every pull request and   push to <code>main</code>, ensuring the stack definition remains valid.</li> <li>cdk-deploy: manual <code>workflow_dispatch</code> gated by the <code>aws-deploy</code>   environment. The workflow configures AWS credentials via OIDC and deploys the   core stack. Provide the <code>AWS_OIDC_ROLE_ARN</code> secret scoped to that environment.</li> </ul>"},{"location":"deployment/#github-oidc-deploy-role","title":"GitHub OIDC deploy role","text":"<ol> <li>In IAM create a new role with a Web identity trust policy. Use <code>infra/iam/github-actions-oidc-trust.json</code> as the baseline document and replace <code>&lt;AWS_ACCOUNT_ID&gt;</code> and the <code>repo:</code> condition with your own values.</li> <li>Attach a customer managed policy using <code>infra/iam/github-actions-oidc-permissions.json</code>. Replace <code>&lt;AWS_REGION&gt;</code>, <code>&lt;AWS_ACCOUNT_ID&gt;</code>, <code>&lt;PROJECT_STACK_PREFIX&gt;</code>, <code>&lt;ARTIFACT_BUCKET_NAME&gt;</code>, <code>&lt;JIRA_TABLE_NAME&gt;</code>, <code>&lt;PROJECT_SECRET_PREFIX&gt;</code>, and <code>&lt;LAMBDA_LOG_GROUP_PREFIX&gt;</code> with the deployed resource names (stack outputs provide the concrete values). The actions are scoped to the DynamoDB, S3, Secrets Manager, and CloudWatch Logs resources created by the CDK stacks.</li> <li>Save the role ARN as the <code>AWS_OIDC_ROLE_ARN</code> repository secret (or environment secret for production) so that GitHub Actions can assume it.</li> <li>The new <code>.github/workflows/cdk-ci.yml</code> workflow assumes this role to run <code>cdk diff</code> on pull requests that touch the CDK app. The manual <code>cdk-deploy</code> workflow continues to use the same secret for production deployments.</li> </ol>"},{"location":"deployment/#runtime-settings","title":"Runtime Settings","text":"<ul> <li>Stack outputs expose the artifacts bucket name, Lambda identifiers, DynamoDB   table, webhook URL, and reconciliation Lambda name for downstream integration.</li> <li>The ReleaseCopilot Lambda receives <code>RC_S3_BUCKET</code>, <code>RC_S3_PREFIX</code>, and   <code>RC_USE_AWS_SECRETS_MANAGER</code> environment variables and looks up Jira/Bitbucket   OAuth credentials from Secrets Manager.</li> <li>The reconciliation job exports <code>TABLE_NAME</code>, <code>JIRA_BASE_URL</code>,   <code>RC_DDB_MAX_ATTEMPTS</code>, <code>RC_DDB_BASE_DELAY</code>, <code>METRICS_NAMESPACE</code>, and   <code>JIRA_SECRET_ARN</code>, with optional <code>FIX_VERSIONS</code> and <code>JQL_TEMPLATE</code> values when   provided via context.</li> <li>Jira webhook processing is powered by <code>TABLE_NAME</code>, <code>LOG_LEVEL</code>, and optional   <code>WEBHOOK_SECRET_ARN</code> environment variables surfaced by the stack.</li> <li>Enable or disable the EventBridge schedules via the <code>scheduleEnabled=true</code> and   <code>reconciliationScheduleEnabled=false</code> context flags during synth/deploy. If a   <code>scheduleCron</code> or <code>reconciliationCron</code> expression is provided, those override   the default rate expressions.</li> </ul>"},{"location":"dev_setup/","title":"Developer setup notes","text":""},{"location":"dev_setup/#aws-cdk","title":"AWS CDK","text":"<p>The CDK app is configured via the repository root <code>cdk.json</code>. From the repository root you can run:</p> <pre><code>npm run cdk:venv\nnpm run cdk:list\nnpm run cdk:synth\nnpm run cdk:diff\nnpm run cdk:deploy\n</code></pre> <p>These commands rely on CDK's default auto-discovery, so no additional <code>-a</code> flags or wrapper scripts are required. Run <code>npm run cdk:venv</code> whenever dependencies change to refresh the virtual environment.</p> <p>Runtime requirement: Install Python 3.11 and Node.js 20 LTS (20.x) locally so the CLI matches the GitHub Actions runners. After switching Node versions with tools like <code>nvm</code>, <code>fnm</code>, or Volta, confirm the runtime with <code>node --version</code>\u2014the output should start with <code>v20</code>.</p>"},{"location":"export-schema/","title":"Audit Export Schema","text":"<p>ReleaseCopilot exporters emit a stable JSON document describing a single audit run. The schema below is the contract consumed by the diff tooling and the Streamlit dashboard.</p>"},{"location":"export-schema/#top-level-shape","title":"Top-level shape","text":"<pre><code>{\n  \"stories\": [Story, ...],\n  \"commits\": [Commit, ...],\n  \"summary\": Summary\n}\n</code></pre> <p>Unknown properties may be added over time, but the keys documented here must always be present.</p>"},{"location":"export-schema/#story-objects","title":"Story objects","text":"<p>Each <code>Story</code> element describes a single work item.</p> Field Type Description <code>id</code> string Internal identifier from the source tracker (e.g. Jira). <code>key</code> string Human readable issue key, used as the primary identifier. <code>summary</code> string Short description or title. <code>status</code> string Current workflow status. <code>assignee</code> string or null Display name of the current assignee. <code>components</code> array of strings Optional component or label names. <code>fixVersions</code> array of strings Versions associated with the story. <code>commitIds</code> array of strings Commit identifiers linked to the story. <p>Additional metadata (like URLs) can be stored alongside these fields without breaking the contract.</p>"},{"location":"export-schema/#commit-objects","title":"Commit objects","text":"<p>Each <code>Commit</code> element captures a single VCS commit.</p> Field Type Description <code>id</code> string Commit SHA or identifier. <code>repo</code> string Repository name. <code>author</code> string Author display name. <code>date</code> string ISO-8601 timestamp. <code>message</code> string Commit message subject. <code>linkedStoryKeys</code> array of strings Story keys associated with the commit. Empty when the commit is orphaned."},{"location":"export-schema/#summary-block","title":"Summary block","text":"<p>The <code>summary</code> object aggregates counters and high-level timestamps for the run.</p> Field Type Description <code>generatedAt</code> string ISO-8601 timestamp when the run completed. <code>storyCount</code> integer Total number of stories exported. <code>storyWithCommitsCount</code> integer Number of stories that have at least one linked commit. <code>storyWithoutCommitsCount</code> integer Number of stories with no linked commits. <code>orphanCommitCount</code> integer Number of commits without a linked story. <code>coveragePercent</code> number Percentage of stories with commits (<code>storyWithCommitsCount / storyCount * 100</code>). <p>Exporters may include additional metrics, but these fields provide a consistent baseline for diffing and reporting.</p>"},{"location":"git-historian/","title":"Git Historian (How to Run)","text":"<p>The Git Historian generates weekly (and on-demand) check-ins that summarize project momentum for Release Copilot. This guide explains how to run the generator locally, how the scheduled GitHub Action works, and how to customize the output for your team.</p>"},{"location":"git-historian/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10+</li> <li><code>requests</code> (installed automatically when you run <code>pip install -r requirements.txt</code>)</li> <li>A GitHub token with <code>repo</code> scope when running outside GitHub Actions. Export it as <code>GITHUB_TOKEN</code>.</li> <li>Optional integrations:</li> <li>Set <code>HISTORIAN_ENABLE_JIRA=true</code> with relevant Jira credentials for linking stories to commits.</li> <li>Provide AWS credentials (via environment or profile) when enabling the S3 artifact collector in <code>config/defaults.yml</code>.</li> </ul>"},{"location":"git-historian/#running-locally","title":"Running Locally","text":"<pre><code># Activate your virtual environment and install dependencies if needed\npip install -r requirements.txt\n\n# Generate a history snapshot from the last 7 days\nexport GITHUB_TOKEN=&lt;your-token&gt;\nexport PYTHONPATH=$(pwd)\npython -m scripts.generate_history --since 7d --until now --output docs/history --debug-scan\n</code></pre> <ul> <li>The script creates <code>docs/history/YYYY-MM-DD-checkin.md</code> using <code>docs/history/HISTORY_TEMPLATE.md</code>.</li> <li>Use <code>--debug-scan</code> to automatically enable DEBUG logging and emit additional scan diagnostics (counts, resolved paths).   Pass <code>--log-level</code> if you need a different verbosity.</li> <li>Use <code>--since</code> with ISO timestamps (<code>2025-01-01T00:00:00Z</code>) or relative windows (<code>14d</code>, <code>48h</code>).</li> <li>Use <code>--until now</code> (default) or a specific ISO timestamp (<code>2025-01-15</code>) to cap the window end.</li> <li>Use <code>--repo owner/name</code> to override automatic repository detection.</li> <li>Use <code>--config &lt;path&gt;</code> to load a different historian configuration (defaults to <code>config/defaults.yml</code>).</li> <li>Tip: If you see <code>ModuleNotFoundError: No module named 'scripts'</code>, confirm you are running from the repository root and that <code>PYTHONPATH</code> includes the root (e.g., <code>export PYTHONPATH=$(pwd)</code>).</li> </ul>"},{"location":"git-historian/#collector-overview","title":"Collector overview","text":"<p>Git Historian renders five sections from a single run:</p> Section Source Notes Completed Merged pull requests + closed issues in the time window Counted once per item. In Progress GitHub Projects v2 (status filter) with optional label fallback Configure the project title, status field, and allowed values in <code>config/defaults.yml</code>. Backlog GitHub Projects v2 (status filter) Uses the same query mechanism as In Progress. Notes &amp; Decisions Issue + PR comments containing configured markers Each matching line is annotated with its parent item's status (Completed/In Progress/Backlog). Artifacts &amp; Traceability GitHub Actions artifacts + optional S3 prefixes Requires workflow names in the config; S3 listing is disabled by default. <p>Each collector contributes metadata (filters and scope) that is shown whenever a section has no entries.</p>"},{"location":"git-historian/#github-action-scheduled-manual","title":"GitHub Action (Scheduled + Manual)","text":"<p>The workflow in <code>.github/workflows/weekly-history.yml</code> runs every Monday at 14:00 UTC and can also be triggered manually (<code>workflow_dispatch</code>). It performs the following steps:</p> <ol> <li>Check out the repository.</li> <li>Lint the GitHub workflow definitions with <code>reviewdog/action-actionlint</code>    pinned to commit <code>93dc1f9bc10856298b6cc1a3b3239cfbbb87fe4b</code> (release <code>v1.67.0</code>) and <code>fail_level: error</code>    so any detected issues fail fast.</li> <li>Run <code>PYTHONPATH=$(pwd) python -m scripts.generate_history --since 7d --until now --output docs/history --debug-scan</code>.</li> <li>Commit changes in <code>docs/history/*.md</code> on a branch named <code>auto/history-&lt;date&gt;</code>.</li> <li>Open a pull request summarizing the update.</li> </ol> <p>If no files change, the workflow exits early and does not create a PR.</p> <p>To run the workflow manually:</p> <ol> <li>Navigate to Actions \u2192 Weekly Git Historian in GitHub.</li> <li>Click Run workflow and optionally override the <code>since</code> window or template path.</li> <li>A pull request is created automatically if new history content is generated.</li> </ol>"},{"location":"git-historian/#linting-and-maintenance","title":"Linting and maintenance","text":"<ul> <li>The workflow lint step relies on <code>reviewdog/action-actionlint</code> pinned to commit   <code>93dc1f9bc10856298b6cc1a3b3239cfbbb87fe4b</code> (release <code>v1.67.0</code>). Update to a newer   version by editing the <code>uses:</code> line in the workflow to a newer commit SHA and adjusting   this document.</li> <li>The action runs <code>actionlint</code> against files in <code>.github/workflows/</code>. If lint errors are   reported, the job fails and the check run contains the detailed findings.</li> <li>When bumping the version, use <code>curl https://api.github.com/repos/reviewdog/action-actionlint/releases</code>   (or the GitHub UI) to select the desired release, copy the commit SHA, and update the   workflow <code>uses:</code> reference.</li> <li>If the GitHub Actions runner cannot resolve the action due to registry outages, fall back   to installing the binary directly in a shell   step. Add a TODO comment in the workflow and revert once the marketplace issue is resolved.</li> </ul>"},{"location":"git-historian/#customization","title":"Customization","text":"<ul> <li>Template \u2013 Pass <code>--template &lt;path&gt;</code> to the script to point to a custom Markdown template.</li> <li>Collectors \u2013 Edit <code>config/defaults.yml</code> (or pass <code>--config</code>) to adjust Projects v2 filters, comment markers, workflow names, and S3 prefixes.</li> <li>Jira Linkage \u2013 When <code>HISTORIAN_ENABLE_JIRA=true</code> and Jira credentials are configured, issues matching the configured   JQL query are matched to commits using a regex (default: <code>[A-Z]+-\\d+</code>). See the script docstring for configuration details.</li> <li>Artifacts \u2013 GitHub Actions artifacts are fetched using the configured workflow file names. Enable the S3 section in the config to add bucket prefixes.</li> <li>Dry Runs \u2013 Use <code>--dry-run</code> to print the generated Markdown to stdout without writing a file.</li> </ul>"},{"location":"git-historian/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Ensure <code>GITHUB_TOKEN</code> is available; unauthenticated calls are heavily rate limited.</li> <li>Use <code>--debug-scan</code> (or <code>--log-level DEBUG</code>) for verbose output when debugging API calls or data collectors.</li> <li>If you rely on Jira, confirm the <code>HISTORIAN_JIRA_*</code> variables are set and the JQL matches your workflow.</li> <li>Customize the schedule in the workflow by editing the cron expression in <code>weekly-history.yml</code>.</li> </ul>"},{"location":"git-historian/#next-steps","title":"Next Steps","text":"<ul> <li>Link the generated check-ins from your Release Copilot dashboards or onboarding docs.</li> <li>Extend the generator to publish artifacts to S3 and enable the S3 collector in <code>config/defaults.yml</code>.</li> <li>Use the machine-readable index at <code>docs/context/context-index.json</code> (generated by the script) to support RAG pipelines.</li> </ul>"},{"location":"markers/","title":"Marker conventions","text":"<p>Release Copilot recognizes four structured markers in GitHub issues and pull requests: Decision, Note, Action, and Blocker. The Git Historian job ingests these markers and mirrors them into weekly history snapshots so the team can scan highlights without trawling through every thread.</p>"},{"location":"markers/#preferred-block-style-for-pr-reviews","title":"Preferred: block style for PR reviews","text":"<p>Use a marker heading followed by one or more bullet points when recording multiple outcomes in a review comment. Each bullet is captured as a separate entry while staying visually compact for humans:</p> <pre><code>Decision:\n- Canonicalize CDK config to infra/cdk/cdk.json and normalize the app to python3 in CI.\n- Treat any additional cdk.json outside infra/cdk/cdk.json as unsupported for CI.\n\nAction:\n- Add guardrail script to fail the build if non-canonical cdk.json files are committed.\n- Document canonical location and preflight expectations for infra contributors.\n</code></pre> <p>Multi-line bullets are supported \u2014 indent the continuation lines to keep them attached to the bullet.</p>"},{"location":"markers/#inline-style-for-quick-notes","title":"Inline style for quick notes","text":"<p>Inline markers remain available for short call-outs, TODOs, or fast triage notes:</p> <pre><code>Note: CI installs `jq` up front before calling the CDK entry point.\nBlocker: Builds fail until duplicate `cdk.json` files are removed.\n</code></pre> <p>The collector continues to index these comments, but inline style can feel noisy when you have to repeat the marker on every line.</p>"},{"location":"markers/#mixing-styles","title":"Mixing styles","text":"<p>It is fine to mix styles in the same comment. For example, you might open with a <code>Decision:</code> block and close with an inline <code>Action:</code> reminder. The parser will stop each block when it reaches another marker or a blank line, so keep related bullets grouped together.</p>"},{"location":"markers/#configuration-reference","title":"Configuration reference","text":"<p>The default marker list lives in <code>config/defaults.yml</code> under <code>historian.sources.notes.comment_markers</code>. Update that list if your team adds new marker types.</p>"},{"location":"observability/","title":"Observability and Resilience","text":"<p>ReleaseCopilot emits structured logs and automatically retries transient network failures. This guide documents the core controls.</p>"},{"location":"observability/#logging","title":"Logging","text":"<p>Logs are emitted through a central configuration that writes to <code>stdout</code> using ISO-8601 timestamps, module names, and the active correlation identifier.</p>"},{"location":"observability/#log-levels","title":"Log levels","text":"<ul> <li>Default level is INFO. Use the <code>--log-level</code> CLI option or the   <code>RC_LOG_LEVEL</code> environment variable to change verbosity.</li> <li>Levels follow the standard Python logging hierarchy:   <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code>.</li> </ul>"},{"location":"observability/#json-mode","title":"JSON mode","text":"<p>Set <code>RC_LOG_JSON=true</code> to switch the formatter to JSON. Each record includes <code>timestamp</code>, <code>level</code>, <code>logger</code>, <code>message</code>, and <code>correlation_id</code> plus any structured context supplied via <code>logger.extra</code>.</p>"},{"location":"observability/#correlation-id","title":"Correlation ID","text":"<p>Each process run is tagged with a correlation identifier (<code>RC_CORR_ID</code>) that is included in every log line. A random UUID is generated when the variable is not set. Propagate the correlation ID across worker processes to preserve request traces.</p>"},{"location":"observability/#secret-redaction","title":"Secret redaction","text":"<p>Common secret tokens (e.g., values containing \"token\", \"secret\", \"password\", \"key\", or \"authorization\") are automatically redacted to prevent accidental exposure in logs.</p>"},{"location":"observability/#retry-behaviour","title":"Retry behaviour","text":"<p>Jira and Bitbucket HTTP calls are protected with exponential backoff and jitter. Transient errors trigger up to five attempts when the response status is <code>429</code> or any <code>5xx</code>, or when a timeout/connection error occurs.</p> <ul> <li>Backoff starts at one second and doubles on each attempt with random jitter.</li> <li><code>Retry-After</code> headers are honoured\u2014delays never fall below the server hint.</li> <li>Retry attempts are logged at the <code>WARNING</code> level with the request context   (HTTP method, URL, repository/JQL details) and rate-limit headers.</li> </ul>"},{"location":"observability/#disabling-retries","title":"Disabling retries","text":"<p>Set <code>RC_DISABLE_RETRIES=true</code> to execute each request exactly once. This is useful during debugging or when operating against mock services that do not need retry protection.</p>"},{"location":"project_instructions/","title":"Project Instructions: Release Copilot","text":""},{"location":"project_instructions/#how-chatgpt-should-respond-in-this-project","title":"How ChatGPT should respond in this project","text":"<p>Act as a teacher + coding partner, guiding me through the implementation of Release Copilot.</p> <p>Always explain why something is done, not just how.</p> <p>Provide step-by-step learning explanations (like PluralSight tutorials) so I build real understanding as I go.</p> <p>When I ask about a task (e.g., AWS setup, Docker build, GitHub automation), break it down into:</p> <ul> <li>Concepts \u2013 what this step is and why it matters.  </li> <li>Practical steps \u2013 exact commands, configs, or files I\u2019ll need.  </li> <li>Learning callout \u2013 extra context, pitfalls to avoid, and how it fits into the bigger system.</li> </ul>"},{"location":"project_instructions/#project-context-release-copilot","title":"Project context (Release Copilot)","text":"<p>Release Copilot automates release audits by correlating Jira stories with Bitbucket commits, producing downloadable reports.</p> <p>It supports both containerized (Docker) and AWS-hosted execution paths.</p> <p>The CLI entrypoint:</p> <ul> <li>Parses YAML-based defaults.  </li> <li>Hydrates Jira and Bitbucket clients.  </li> <li>Fetches issues + commits (with caching &amp; retries).  </li> <li>Synthesizes results into JSON/Excel.  </li> <li>Can push reports + raw payloads to S3.  </li> <li>Resolves secrets (overrides \u2192 env vars \u2192 AWS Secrets Manager).  </li> <li>Links commits to stories, highlights gaps/orphans, and outputs results.</li> </ul>"},{"location":"project_instructions/#context-maintenance-new","title":"Context maintenance (new)","text":"<p>To ensure both humans and LLMs can quickly understand the current state of the project and make progress efficiently, context maintenance is built into the workflow:</p>"},{"location":"project_instructions/#update-github-project-board","title":"Update GitHub Project Board","text":"<ul> <li>Always reflect completed, in-progress, and planned work.  </li> <li>Use labels and milestones consistently for easy filtering.</li> </ul>"},{"location":"project_instructions/#summarize-conversations","title":"Summarize Conversations","text":"<ul> <li>Capture important decisions, blockers, and resolutions in concise summaries.  </li> <li>Store summaries in GitHub issues (or Markdown/JSON files) so they can be referenced later.</li> </ul>"},{"location":"project_instructions/#maintain-traceability","title":"Maintain Traceability","text":"<ul> <li>Always connect Jira stories \u2194 Bitbucket commits \u2194 Excel/JSON reports.  </li> <li>Ensure outputs point back to their source for easy troubleshooting.</li> </ul>"},{"location":"project_instructions/#artifacts-as-snapshots","title":"Artifacts as Snapshots","text":"<ul> <li>Treat Excel reports, JSON exports, and S3 uploads as checkpoints of the project state.  </li> <li>Document how/why they were produced.</li> </ul>"},{"location":"project_instructions/#historian-role","title":"Historian Role","text":"<ul> <li>Generate weekly or milestone-based summaries of \u201cwhat was done\u201d and \u201cwhat\u2019s next.\u201d  </li> <li>These serve as onboarding tools for humans and retrieval anchors for LLMs.</li> </ul>"},{"location":"project_instructions/#automated-testing-cicd-new","title":"Automated Testing &amp; CI/CD (new)","text":"<p>Automated checks are critical for preventing failures in production. They enforce consistency, catch mistakes early, and make deployments safer.</p>"},{"location":"project_instructions/#core-practices","title":"Core Practices","text":""},{"location":"project_instructions/#unit-tests","title":"Unit Tests","text":"<ul> <li>Every function/module should have test coverage for expected + edge cases.  </li> <li>Use pytest and run locally and in CI.  </li> <li>Mock external services (Jira/Bitbucket APIs, AWS calls) so tests are fast and safe.</li> </ul>"},{"location":"project_instructions/#integration-tests","title":"Integration Tests","text":"<ul> <li>Validate how modules work together (e.g., Jira fetcher \u2192 exporter \u2192 report generator).  </li> <li>Use cached/mock payloads to avoid external dependencies.</li> </ul>"},{"location":"project_instructions/#linting-formatting","title":"Linting &amp; Formatting","text":"<ul> <li>Run ruff check and black (or equivalent) to enforce a consistent style and catch bugs like unused imports.</li> </ul>"},{"location":"project_instructions/#github-actions-ci","title":"GitHub Actions CI","text":"<p>On every PR/merge to main: - Run lint checks. - Run unit tests. - Package Lambda and fail if the artifact is empty. - Run cdk synth to confirm infrastructure compiles.</p> <p>On tags (e.g., v1.0.0): - Upload versioned artifacts.</p> <p>Manual trigger: - Optional S3 uploader that publishes reports to versioned prefixes.</p>"},{"location":"project_instructions/#fail-early-fail-loud","title":"Fail Early, Fail Loud","text":"<ul> <li>CI should break if tests fail, if packaging produces 0 bytes, or if CDK synth errors out.  </li> <li>Prevents broken builds from reaching production.</li> </ul>"},{"location":"project_instructions/#documentation-runbooks","title":"Documentation + Runbooks","text":"<p>Every CI/CD workflow must have a \u201cQuick Runbook\u201d in docs/ so future developers understand: - Triggers (PR, push, tag, manual). - Inputs (fix version, run uploader). - Outputs (artifacts, S3 paths). - Local smoke test equivalents (pytest, package_lambda.py, etc.).</p>"},{"location":"project_instructions/#how-to-help-me-best","title":"How to help me best","text":"<ul> <li>Treat me as someone who is new to AWS/Docker setup but willing to learn.  </li> <li>Use simple, beginner-friendly explanations for infra/devops tasks.  </li> <li>Suggest best practices for cost savings, credential security, and project organization.  </li> <li>When tasks are completed, help me close out GitHub issues and identify the next step in the roadmap.  </li> <li>Provide Codex prompts or starter code when implementation details are needed.  </li> <li>Provide checklists for major tasks (AWS deployment, Docker build, GitHub CI/CD).  </li> <li>Encourage me to experiment and document what I learn.  </li> <li>Always tie back changes and outputs to the context maintenance layer.</li> </ul>"},{"location":"project_instructions/#tone-style","title":"Tone &amp; Style","text":"<ul> <li>Friendly, encouraging, and structured like a learning module.  </li> <li>Use clear sections, bullet points, and code blocks.  </li> <li>Summarize next actions at the end of responses with a short: \u201cYour Next Step \u2192 \u2026\u201d</li> </ul>"},{"location":"project_instructions/#notes-decisions-policy-revised","title":"Notes &amp; Decisions Policy (revised)","text":"<p>To improve context traceability in Release Copilot, every GitHub Issue and Pull Request must include at least one comment with a marker.  </p> <p>These markers are automatically collected by the Git Historian workflow and surfaced in weekly snapshots, mirror-notes, and milestone summaries.</p>"},{"location":"project_instructions/#allowed-markers","title":"Allowed markers","text":"<ul> <li>Decision: Record choices made (e.g., tool selection, approach).  </li> <li>Note: Capture important context that others should know.  </li> <li>Blocker: Identify an impediment and its owner. Must be used if the work cannot proceed until resolved.  </li> <li>Action: Define a follow-up step with owner and (ideally) a date.</li> </ul>"},{"location":"project_instructions/#example","title":"Example","text":"<pre><code>Decision: Use GraphQL for Projects v2 queries to minimize API calls.  \nBlocker: Workflow fails on every run until argument parsing is fixed.  \nAction: (Owner: Shayne) Patch workflow to remove `--until` by 9/28.  \nNote: CLI never supported `--until`; this was a workflow assumption.\n</code></pre>"},{"location":"project_instructions/#why-this-matters","title":"Why this matters","text":"<ul> <li>Ensures the Historian can automatically pull Decisions, Notes, Blockers, and Actions into snapshots.  </li> <li>Guarantees that weekly/milestone history includes rationale and pending items, not just commits.  </li> <li>Provides continuity between \u201cCompleted,\u201d \u201cIn Progress,\u201d and \u201cUpcoming\u201d categories.  </li> <li>Reduces reliance on Slack/Confluence by embedding durable traceability in Issues/PRs.</li> </ul>"},{"location":"project_instructions/#best-practices","title":"Best Practices","text":"<ul> <li>Always include a Decision or Action marker when closing an Issue or PR.  </li> <li>Use Blocker whenever CI, workflow, or environment issues stop progress.  </li> <li>Add Note when context may help future maintainers or onboarding.</li> </ul>"},{"location":"adr/ADR-0001-cdk-root-config/","title":"ADR-0001: Adopt root-level <code>cdk.json</code> with module entry","text":""},{"location":"adr/ADR-0001-cdk-root-config/#status","title":"Status","text":"<p>Accepted</p>"},{"location":"adr/ADR-0001-cdk-root-config/#context","title":"Context","text":"<p>Repeated CI failures reported <code>--app is required either in command-line, in cdk.json or in ~/.cdk.json</code>. Historical workflows executed <code>cdk</code> commands from <code>infra/cdk/</code>, carried duplicate <code>cdk.json</code> files, and occasionally passed bespoke <code>-a</code> paths. Those patterns diverged from AWS CDK defaults and caused the CLI to miss the intended entry point. Contributors also hit <code>ModuleNotFoundError</code> exceptions because the <code>infra</code> package was not initialised properly before running <code>python infra/cdk/app.py</code>.</p>"},{"location":"adr/ADR-0001-cdk-root-config/#decision","title":"Decision","text":"<ul> <li>Maintain a single <code>cdk.json</code> at the repository root with <code>\"app\": \"python -m infra.cdk.app\"</code>.</li> <li>Treat <code>infra</code> as an installable package (<code>infra/__init__.py</code>, <code>infra/cdk/__init__.py</code>) and require absolute imports such as <code>from infra.cdk.core_stack import CoreStack</code>.</li> <li>Run every CDK command (<code>npx cdk list</code>, <code>synth</code>, <code>diff</code>, <code>deploy</code>) from the repository root, locally and in GitHub Actions.</li> <li>Provision dependencies through <code>infra/cdk/requirements.txt</code> and install them before invoking the CDK CLI.</li> </ul>"},{"location":"adr/ADR-0001-cdk-root-config/#consequences","title":"Consequences","text":"<ul> <li>CI and local environments share the same entrypoint resolution, eliminating the <code>--app</code> discovery errors.</li> <li>The workflows simplify to a single virtual environment and Node 20 toolchain, making synth/diff/deploy deterministic.</li> <li>Documentation can reference one canonical set of commands, reducing onboarding friction.</li> <li>Guardrails (diagnostic steps) highlight when someone attempts to run CDK from the wrong directory or removes the root <code>cdk.json</code>.</li> </ul>"},{"location":"adr/ADR-0001-cdk-root-config/#alternatives-considered","title":"Alternatives considered","text":"<ul> <li>Nested <code>cdk.json</code> files inside <code>infra/cdk/</code>: rejected because the CLI would still require directory hopping and often conflicted with the root config.</li> <li>Passing <code>-a</code> paths everywhere: rejected as brittle; forgetting the flag reproduces the original error and contradicts CDK's discovery model.</li> <li>Custom wrapper scripts to set <code>APP</code>: rejected to keep the workflow aligned with standard CDK usage and reduce bespoke tooling.</li> </ul>"},{"location":"cdk/","title":"CDK Best Practices (This Repo)","text":"<p>Run all AWS CDK commands from the repository root.</p> <p>The infrastructure code is designed so that every <code>npx cdk</code> invocation occurs at the top level of the repository. The root-level <code>cdk.json</code> exposes a module-style entry point that keeps local development and CI perfectly aligned.</p>"},{"location":"cdk/#layout-expectations","title":"Layout expectations","text":"<ul> <li><code>cdk.json</code> (at the repository root) contains:</li> </ul> <p><pre><code>{\n  \"app\": \"python -m infra.cdk.app\"\n}\n</code></pre> - The CDK application module lives in <code>infra/cdk/app.py</code> and must remain importable via <code>python -m infra.cdk.app</code>. - <code>infra/cdk/__init__.py</code> exists (even if empty) so <code>infra.cdk</code> is treated as a proper Python package. - Application code uses absolute imports, e.g. <code>from infra.cdk.core_stack import CoreStack</code>.</p> <p>Keeping this layout prevents the classic \"<code>--app</code> is required\" error that appears when CDK is executed outside the repository root or when multiple <code>cdk.json</code> files are present.</p>"},{"location":"cdk/#dependencies","title":"Dependencies","text":"<p>Install AWS CDK v2 and supporting libraries from <code>infra/cdk/requirements.txt</code>:</p> <pre><code>aws-cdk-lib&gt;=2.150.0,&lt;3.0.0\nconstructs&gt;=10.0.0,&lt;11.0.0\nboto3&gt;=1.28.0\n</code></pre> <p>These packages provide the <code>aws_cdk</code> namespace, construct primitives, and optional AWS API clients used by the app. Upgrade or pin additional dependencies in the same file so every environment (local shells, CI, automation) shares the exact toolchain.</p>"},{"location":"cdk/#local-quickstart","title":"Local quickstart","text":"<pre><code>python -m venv .venv\n# PowerShell: .\\.venv\\Scripts\\Activate.ps1\n# Bash / Zsh: source .venv/bin/activate\npython -m pip install -U pip\npip install -r infra/cdk/requirements.txt\nnpx cdk list\nnpx cdk synth\n</code></pre> <p>Running the commands from the repository root guarantees that CDK discovers <code>cdk.json</code>, resolves the <code>python -m infra.cdk.app</code> entry, and loads the <code>infra.cdk</code> package without import hacks.</p>"},{"location":"cdk/#continuous-integration-summary","title":"Continuous integration summary","text":"<ul> <li>All CI jobs operate from the repository root\u2014no <code>cd infra/cdk</code> steps.</li> <li>Workflows provision Node.js 20 LTS (satisfying jsii requirements) and Python 3.11.</li> <li>A virtual environment installs <code>infra/cdk/requirements.txt</code> before invoking <code>npx cdk ...</code>.</li> <li>Optional guardrails can print the working directory and <code>cdk.json</code> contents to diagnose misconfigurations.</li> </ul>"},{"location":"cdk/#avoid-these-pitfalls","title":"Avoid these pitfalls","text":"<ul> <li>\u274c Adding another <code>cdk.json</code> inside <code>infra/cdk/</code> or elsewhere.</li> <li>\u274c Passing random <code>-a</code> paths that diverge from the module entry.</li> <li>\u274c <code>cd</code>-ing into <code>infra/cdk</code> (or any subdirectory) before running CDK CLI commands.</li> <li>\u274c Using relative imports or missing <code>__init__.py</code> files that break module resolution.</li> </ul> <p>Stick to the root-centric workflow and CDK will consistently discover the app, both locally and inside GitHub Actions.</p>"},{"location":"checklists/cdk-change-checklist/","title":"CDK Change Checklist","text":"<p>Use this checklist before opening a pull request that touches the infrastructure code.</p> <ul> <li>[ ] Root <code>cdk.json</code> exists with <code>\"app\": \"python -m infra.cdk.app\"</code>.</li> <li>[ ] No <code>infra/cdk/cdk.json</code>; no <code>infra/cdk/infra/cdk/</code> duplicate directory.</li> <li>[ ] <code>infra/cdk/__init__.py</code> exists and application imports are absolute (e.g. <code>from infra.cdk.core_stack import ...</code>).</li> <li>[ ] <code>infra/cdk/requirements.txt</code> includes <code>aws-cdk-lib</code>, <code>constructs</code>, and <code>boto3</code>.</li> <li>[ ] Local validation from the repository root succeeds: <code>npx cdk list</code> and <code>npx cdk synth</code>.</li> <li>[ ] GitHub Actions workflows and scripts do not <code>cd infra/cdk</code> or override the app with ad-hoc <code>-a</code> flags.</li> </ul>"},{"location":"configuration/defaults/","title":"Configuration defaults","text":"<p><code>config/defaults.yml</code> is the canonical source of configuration for Release Copilot. Both the CLI (<code>main.py</code>) and the Lambda entry point resolve their runtime settings through the shared loader in <code>src/config/loader.py</code>, ensuring the following precedence order:</p> <ol> <li>Explicit overrides \u2013 CLI flags, Lambda event payloads, or <code>config/settings.yaml</code>.</li> <li>Environment variables (including values from <code>.env</code>).</li> <li>AWS Secrets Manager payloads resolved via <code>clients.secrets_manager.CredentialStore</code>.</li> <li>Canonical defaults committed in <code>config/defaults.yml</code>.</li> </ol> <p>The defaults file intentionally contains non-secret values and documents the expected schema. Secrets are referenced by ARN under the <code>secrets</code> block and are resolved into the configuration at load time. Each ARN maps specific keys from the secret payload (for example <code>client_id</code>, <code>app_password</code>) into the final configuration tree via dotted paths such as <code>jira.credentials.client_id</code>.</p>"},{"location":"configuration/defaults/#sections","title":"Sections","text":""},{"location":"configuration/defaults/#aws","title":"<code>aws</code>","text":"<p>Defines the default region used for AWS clients. The loader uses this value when initialising the Secrets Manager client.</p>"},{"location":"configuration/defaults/#storage","title":"<code>storage</code>","text":"<p>Contains DynamoDB and S3 configuration:</p> <ul> <li><code>storage.dynamodb.jira_issue_table</code> \u2013 DynamoDB table backing the Jira cache.</li> <li><code>storage.s3.bucket</code> / <code>storage.s3.prefix</code> \u2013 Artifact destinations for uploads.</li> </ul>"},{"location":"configuration/defaults/#jira","title":"<code>jira</code>","text":"<p>Captures Jira connection details, including scopes used by the audit command and placeholders for OAuth credentials. Secrets populate the <code>credentials</code> block at runtime.</p>"},{"location":"configuration/defaults/#bitbucket","title":"<code>bitbucket</code>","text":"<p>Specifies the workspace, default repositories, and optional credential placeholders.</p>"},{"location":"configuration/defaults/#webhooks","title":"<code>webhooks</code>","text":"<p>Holds webhook metadata such as the shared secret used to validate incoming Jira webhook calls.</p>"},{"location":"configuration/defaults/#secrets","title":"<code>secrets</code>","text":"<p>Lists AWS Secrets Manager ARNs and the schema for mapping secret payload fields into the configuration tree. The loader merges secret payloads after reading the defaults file but before applying environment variables and explicit overrides.</p>"},{"location":"configuration/defaults/#overrides","title":"Overrides","text":"<p>Create <code>config/settings.yaml</code> to capture environment-specific defaults without modifying <code>defaults.yml</code>. The file uses the same schema and can be committed to version control when it only contains non-secret values. Secrets should remain in AWS Secrets Manager or environment variables.</p>"},{"location":"configuration/defaults/#validation","title":"Validation","text":"<p><code>load_config</code> performs schema validation to ensure mandatory keys (region, S3 bucket, Jira scopes, secret ARNs, etc.) are present. The application fails fast with a descriptive error if any required values are missing, preventing partial configuration from reaching runtime.</p>"},{"location":"diagrams/agents/","title":"Agent Orchestration","text":"<pre><code>flowchart TB\n  subgraph Orchestrator\n    Plan[Planner / TaskGraph]\n    Tools[Tooling Layer]\n  end\n\n  subgraph Agents\n    A1[Jira Agent]\n    A2[Bitbucket Agent]\n    A3[Audit Agent]\n    A4[Reporting Agent]\n  end\n\n  subgraph Memory &amp; RAG\n    MCP[MCP Memory]\n    VDB[FAISS / Vertex AI]\n  end\n\n  User[User/CLI/UI] --&gt; Plan\n  Plan --&gt; A1\n  Plan --&gt; A2\n  A1 --&gt; Tools\n  A2 --&gt; Tools\n  Tools --&gt;|Jira API| JiraCloud[(Jira)]\n  Tools --&gt;|Bitbucket API| BBCloud[(Bitbucket)]\n  A3 --&gt; Plan\n  A3 --&gt; MCP\n  A3 --&gt; VDB\n  A4 --&gt; MCP\n  A4 --&gt; VDB\n  Plan --&gt; Output[Excel / JSON / UI]\n</code></pre>"},{"location":"diagrams/components/","title":"Components","text":"<pre><code>flowchart TB\n  subgraph CLI Layer\n    CLI[cli/main.py]\n    Config[config loader]\n  end\n\n  subgraph Core Domain\n    Orchestrator[orchestrator.py]\n    Matcher[matcher/engine.py]\n    Exporter[export/exporter.py]\n    Cache[cache/store.py]\n    Logging[logging/config.py]\n  end\n\n  subgraph Integrations\n    JiraClient[clients/jira_client.py]\n    BBClient[clients/bitbucket_client.py]\n    SecretsClient[clients/secrets_manager_client.py]\n  end\n\n  subgraph Agents &amp; Memory\n    Agents[agents/ (LangGraph or crewAI)]\n    MCP[MCP memory connectors]\n    RAG[RAG: FAISS/Vertex AI]\n  end\n\n  subgraph Deployment\n    Lambda[Lambda handler]\n    ECS[ECS task runner]\n    S3[(S3)]\n    GHActions[GitHub Actions CI]\n  end\n\n  CLI --&gt; Orchestrator\n  Config --&gt; Orchestrator\n  Orchestrator --&gt; JiraClient\n  Orchestrator --&gt; BBClient\n  Orchestrator --&gt; Matcher\n  Matcher --&gt; Exporter\n  Orchestrator --&gt; Exporter\n  Orchestrator --&gt; Cache\n  Logging -. used by .- CLI\n  Logging -. used by .- Orchestrator\n  SecretsClient --&gt; JiraClient\n  SecretsClient --&gt; BBClient\n\n  Orchestrator --&gt; Agents\n  Agents --&gt; MCP\n  Agents --&gt; RAG\n\n  GHActions --&gt; S3\n  Lambda --&gt; Orchestrator\n  ECS --&gt; Orchestrator\n  Exporter --&gt; S3\n</code></pre>"},{"location":"diagrams/data-flow/","title":"End-to-End Data Flow","text":"<pre><code>sequenceDiagram\n  participant U as User\n  participant CLI as CLI / Streamlit UI\n  participant OR as Orchestrator\n  participant JC as Jira Client\n  participant BC as Bitbucket Client\n  participant M as Matcher\n  participant EX as Exporter\n  participant S3 as S3\n  participant SEC as Secrets Manager\n\n  U-&gt;&gt;CLI: Start audit (project, fixVersion, date window)\n  CLI-&gt;&gt;OR: Run(params)\n  OR-&gt;&gt;SEC: Fetch OAuth &amp; API creds\n  SEC--&gt;&gt;OR: Credentials\n\n  OR-&gt;&gt;JC: fetch_issues_by_jql(jql)\n  JC--&gt;&gt;OR: issues[]\n\n  OR-&gt;&gt;BC: fetch_commits(repos, branches, dateRange)\n  BC--&gt;&gt;OR: commits[]\n\n  OR-&gt;&gt;M: match(issues[], commits[])\n  M--&gt;&gt;OR: matched, missingStories, orphanCommits, summary\n\n  OR-&gt;&gt;EX: export(matched, missing, orphans, summary)\n  EX--&gt;&gt;CLI: audit_results.xlsx, audit_results.json\n  EX-&gt;&gt;S3: upload artifacts\n\n  CLI--&gt;&gt;U: Show summary + download links\n</code></pre>"},{"location":"diagrams/deployment-aws/","title":"AWS Deployment","text":"<pre><code>flowchart LR\n  subgraph VPC[VPC]\n    subgraph PrivateSubnets[Private Subnets]\n      ECS[ECS/Fargate Task]:::svc\n      Lmb[Lambda]:::svc\n    end\n    subgraph PublicSubnets[Public Subnets]\n      ALB[ALB / API Gateway]:::edge\n    end\n  end\n\n  Dev[GitHub Actions CI]:::ext --&gt;|build/test| ECR[ECR]:::aws\n  Dev --&gt;|IaC apply| CFN[CloudFormation/Terraform/CDK]:::aws\n  CFN --&gt; VPC\n  CFN --&gt; Secrets[Secrets Manager]:::aws\n  CFN --&gt; S3[(S3 Reports)]:::aws\n  CFN --&gt; Logs[CloudWatch Logs]:::aws\n  CFN --&gt; IAM[IAM Roles/Policies]:::aws\n\n  ALB --&gt; ECS\n  ALB --&gt; Lmb\n  ECS --&gt; Secrets\n  Lmb --&gt; Secrets\n  ECS --&gt; S3\n  Lmb --&gt; S3\n  ECS --&gt; Logs\n  Lmb --&gt; Logs\n\n  classDef aws fill:#eef7ff,stroke:#2f6feb,color:#0b2e5a\n  classDef svc fill:#fff8e6,stroke:#b26a00,color:#4a2c00\n  classDef edge fill:#e6fffb,stroke:#0aa, color:#044\n  classDef ext fill:#f0f0f0,stroke:#888,color:#333\n</code></pre>"},{"location":"diagrams/system-context/","title":"System Context","text":"<pre><code>flowchart LR\n  User([Engineer / RM / DevOps]) --&gt;|Run audit, view reports| UI[Web UI (Streamlit)]\n  User --&gt;|CLI usage| CLI[CLI Tool]\n\n  subgraph ReleaseCopilot-AI\n    CLI --&gt; Core[Audit Core]\n    UI --&gt; Core\n    Core --&gt; Jira[Jira Client (OAuth 3LO)]\n    Core --&gt; BB[Bitbucket Client]\n    Core --&gt; Match[Story\u2194Commit Matcher]\n    Core --&gt; Export[Exporter (Excel/JSON)]\n    Core --&gt; Agents[Agents (LangGraph/crewAI)]\n    Agents --&gt; MCP[MCP Memory Layer]\n  end\n\n  subgraph AWS\n    Core --&gt; S3[(S3 Reports/Artifacts)]\n    Core --&gt; Secrets[Secrets Manager]\n    Depl[Lambda/ECS Task] --&gt; Core\n  end\n\n  Jira &lt;--&gt; |REST v3| JiraCloud[(Jira Cloud)]\n  BB &lt;--&gt; |REST| BitbucketCloud[(Bitbucket Cloud)]\n\n  Export --&gt; |Download| UI\n  S3 --&gt; |Download links| UI\n</code></pre>"},{"location":"history/","title":"Git Historian Snapshots","text":"<p>The <code>docs/history</code> folder contains weekly and on-demand project history check-ins generated by the Git Historian tooling.</p> <p>Each file follows the <code>YYYY-MM-DD-checkin.md</code> naming convention and is produced from <code>scripts/generate_history.py</code> using the history template. The generator aggregates completed work (merged pull requests and closed issues), in-progress and backlog items from GitHub Projects, decisions captured in issue/PR comments, and build artifacts (from GitHub Actions and optional S3 buckets).</p> <p>In addition to the human-readable Markdown snapshots, the generator keeps an updated machine-readable index at <code>docs/context/context-index.json</code> so other automation (such as RAG pipelines) can easily discover the latest check-ins.</p> <p>See Git Historian (How to Run) for full usage instructions, including how to run the generator locally, schedule automated updates, and customize the output.</p>"},{"location":"history/2025-09-25-checkin/","title":"Weekly Check-in: 2025-09-25","text":"<p>Generated from history snapshot starting 2025-09-18 and ending 2025-09-25</p>"},{"location":"history/2025-09-25-checkin/#completed-0","title":"Completed (0)","text":"<p>No completed work in this window</p>"},{"location":"history/2025-09-25-checkin/#in-progress-0","title":"In Progress (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [In Progress] Scope: GitHub issues via Projects v2 board No matching in-progress issues (see filters above)</p>"},{"location":"history/2025-09-25-checkin/#backlog-0","title":"Backlog (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [Backlog] Scope: GitHub issues via Projects v2 board No matching backlog issues (see filters above)</p>"},{"location":"history/2025-09-25-checkin/#notes-decisions-0","title":"Notes &amp; Decisions (0)","text":"<p>Markers: Decision:, Note:, Blocker:, Action: Scope: comment bodies for issues &amp; pull requests No decision markers captured in this window</p>"},{"location":"history/2025-09-25-checkin/#artifacts-traceability-0","title":"Artifacts &amp; Traceability (0)","text":"<p>GitHub Actions workflows: ci.yml, weekly-history.yml S3 prefixes: s3://releasecopilot-artifacts/reports/, s3://releasecopilot-artifacts/history/ (disabled) No artifacts captured in this window</p> <p><sub>Generated by Git Historian. Customize sections via scripts/generate_history.py options.</sub></p>"},{"location":"history/2025-09-26-checkin/","title":"Weekly Check-in: 2025-09-26","text":"<p>Generated from history snapshot starting 2025-09-19 and ending 2025-09-26</p>"},{"location":"history/2025-09-26-checkin/#completed-30","title":"Completed (30)","text":"<ul> <li>PR #129: feat: extend historian with project, notes, and artifact collectors by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #113: chore(ci): resolve actionlint deprecation + shellcheck warnings by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #112: chore: weekly history snapshot 2025-09-26 by @github-actions[bot] (merged 2025-09-26)</li> <li>PR #110: ci: configure historian token permissions by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #111: Refine Historian Workflow Permissions and Fix Actionlint Issue by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #108: ci: fix weekly historian actionlint step by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #106:  Implement and Fix Weekly Git Historian Automation by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #104: feat: add git historian automation by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #82: Develop to Main Merge by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #80: Add Jira webhook sync pipeline and DynamoDB-backed store by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #79: Add structured logging, retries, and typed errors by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #68: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #65: Consolidate CI workflow and document updates by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #66: Add optional EventBridge schedule for audit Lambda by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #63: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #62: Align CDK CI workflow with secret guardrails by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #60: Ensure CDK CI runs core checks with step-level secret gating by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #61: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #58: Add CloudWatch alarms for Lambda and optional SNS notifications by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #55: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #57: Fix CDK synth workflow and environment resolution by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #54: feat: add CDK core stack skeleton by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #53: feat(cdk): codify core infra stack by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #45: Add targeted tests and mark binary golden artifact by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #43: Add S3 artifact uploader with AWS metadata by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #42: Add baseline CI workflow by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #41: Develop by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #39: Add audit diff utilities and Streamlit compare view by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #38: Develop by @dutchsloot84 (merged 2025-09-19)</li> <li>PR #37: feat(ui): add streamlit audit dashboard by @dutchsloot84 (merged 2025-09-19)</li> </ul>"},{"location":"history/2025-09-26-checkin/#in-progress-0","title":"In Progress (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [In Progress] Scope: GitHub issues labeled in-progress No matching in-progress issues (see filters above)</p>"},{"location":"history/2025-09-26-checkin/#backlog-0","title":"Backlog (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [Backlog] Scope: GitHub issues via Projects v2 board No matching backlog issues (see filters above)</p>"},{"location":"history/2025-09-26-checkin/#notes-decisions-0","title":"Notes &amp; Decisions (0)","text":"<p>Markers: Decision:, Note:, Blocker:, Action: Scope: comment bodies for issues &amp; pull requests Mirrored notes files: docs/history/notes/*/.md No decision markers captured in this window</p>"},{"location":"history/2025-09-26-checkin/#artifacts-traceability-33","title":"Artifacts &amp; Traceability (33)","text":"<ul> <li>Workflow <code>ci.yml</code> run #51 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #49 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #48 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #47 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #46 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #45 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #44 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #42 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #40 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #39 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #38 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #36 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #35 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #34 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #33 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #32 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #30 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #28 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #27 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #26 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #25 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #23 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #22 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #21 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #20 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #19 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #18 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #16 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #14 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #13 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #12 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #9 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #8 \u2192 lambda_bundle (download, expires 2025-10-01)</li> </ul> <p><sub>Generated by Git Historian. Customize sections via scripts/generate_history.py options.</sub></p>"},{"location":"history/2025-09-29-checkin/","title":"Weekly Check-in: 2025-09-29","text":"<p>Generated from history snapshot starting 2025-09-22 and ending 2025-09-29</p>"},{"location":"history/2025-09-29-checkin/#completed-34","title":"Completed (34)","text":"<ul> <li>PR #137: Major Historian Module Enhancements, Stability Fixes, and Documentation Updates by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #136: Update configuration docs for settings.yaml defaults by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #135: docs: clarify S3 upload flags by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #134: docs: refresh deployment guide for unified core stack by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #132: fix(cli): add debug scan flag for historian by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #133: chore: weekly history snapshot 2025-09-26 by @github-actions[bot] (merged 2025-09-26)</li> <li>PR #129: feat: extend historian with project, notes, and artifact collectors by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #113: chore(ci): resolve actionlint deprecation + shellcheck warnings by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #112: chore: weekly history snapshot 2025-09-26 by @github-actions[bot] (merged 2025-09-26)</li> <li>PR #110: ci: configure historian token permissions by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #111: Refine Historian Workflow Permissions and Fix Actionlint Issue by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #108: ci: fix weekly historian actionlint step by @dutchsloot84 (merged 2025-09-26)</li> <li>PR #106:  Implement and Fix Weekly Git Historian Automation by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #104: feat: add git historian automation by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #82: Develop to Main Merge by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #80: Add Jira webhook sync pipeline and DynamoDB-backed store by @dutchsloot84 (merged 2025-09-25)</li> <li>PR #79: Add structured logging, retries, and typed errors by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #68: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #65: Consolidate CI workflow and document updates by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #66: Add optional EventBridge schedule for audit Lambda by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #63: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #62: Align CDK CI workflow with secret guardrails by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #60: Ensure CDK CI runs core checks with step-level secret gating by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #61: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #58: Add CloudWatch alarms for Lambda and optional SNS notifications by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #55: Develop by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #57: Fix CDK synth workflow and environment resolution by @dutchsloot84 (merged 2025-09-24)</li> <li>PR #54: feat: add CDK core stack skeleton by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #53: feat(cdk): codify core infra stack by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #45: Add targeted tests and mark binary golden artifact by @dutchsloot84 (merged 2025-09-23)</li> <li>PR #43: Add S3 artifact uploader with AWS metadata by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #42: Add baseline CI workflow by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #41: Develop by @dutchsloot84 (merged 2025-09-22)</li> <li>PR #39: Add audit diff utilities and Streamlit compare view by @dutchsloot84 (merged 2025-09-22)</li> </ul>"},{"location":"history/2025-09-29-checkin/#in-progress-0","title":"In Progress (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [In Progress] Scope: GitHub issues labeled in-progress No matching in-progress issues (see filters above)</p>"},{"location":"history/2025-09-29-checkin/#backlog-0","title":"Backlog (0)","text":"<p>Filters: Project 'Release Copilot' \u2022 Status \u2208 [Backlog] Scope: GitHub issues via Projects v2 board No matching backlog issues (see filters above)</p>"},{"location":"history/2025-09-29-checkin/#notes-decisions-6","title":"Notes &amp; Decisions (6)","text":"<ul> <li>Decision: Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> <li>Decision: Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> <li>Note: Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> <li>Action: (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> <li>Action: (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> <li>Blocker: If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first. \u2014 #137 \u00b7 @dutchsloot84 \u00b7 2025-09-26</li> </ul>"},{"location":"history/2025-09-29-checkin/#artifacts-traceability-39","title":"Artifacts &amp; Traceability (39)","text":"<ul> <li>Workflow <code>ci.yml</code> run #60 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #59 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #58 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #56 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #54 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #52 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #51 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #49 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #48 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #47 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #46 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #45 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #44 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #42 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #40 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #39 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #38 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #36 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #35 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #34 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #33 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #32 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #30 \u2192 lambda_bundle (download, expires 2025-10-03)</li> <li>Workflow <code>ci.yml</code> run #28 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #27 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #26 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #25 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #23 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #22 \u2192 lambda_bundle (download, expires 2025-10-02)</li> <li>Workflow <code>ci.yml</code> run #21 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #20 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #19 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #18 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #16 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #14 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #13 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #12 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #9 \u2192 lambda_bundle (download, expires 2025-10-01)</li> <li>Workflow <code>ci.yml</code> run #8 \u2192 lambda_bundle (download, expires 2025-10-01)</li> </ul> <p><sub>Generated by Git Historian. Customize sections via scripts/generate_history.py options.</sub></p>"},{"location":"history/HISTORY_TEMPLATE/","title":"Weekly Check-in: {{date}}","text":"<p>Generated from history snapshot starting {{since}} and ending {{until}}</p>"},{"location":"history/HISTORY_TEMPLATE/#completed-completed_count","title":"Completed ({{completed_count}})","text":"<p>{{completed}}</p>"},{"location":"history/HISTORY_TEMPLATE/#in-progress-in_progress_count","title":"In Progress ({{in_progress_count}})","text":"<p>{{in_progress}}</p>"},{"location":"history/HISTORY_TEMPLATE/#backlog-backlog_count","title":"Backlog ({{backlog_count}})","text":"<p>{{backlog}}</p>"},{"location":"history/HISTORY_TEMPLATE/#notes-decisions-notes_count","title":"Notes &amp; Decisions ({{notes_count}})","text":"<p>{{notes}}</p>"},{"location":"history/HISTORY_TEMPLATE/#artifacts-traceability-artifacts_count","title":"Artifacts &amp; Traceability ({{artifacts_count}})","text":"<p>{{artifacts}}</p> <p><sub>Generated by Git Historian. Customize sections via scripts/generate_history.py options.</sub></p>"},{"location":"history/notes/2025-09-26-dutchsloot84-ReleaseCopilot-AI-137/","title":"Notes &amp; Decisions \u2014 #137 Major Historian Module Enhancements, Stability Fixes, and Documentation Updates","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/137</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-09-29-dutchsloot84-ReleaseCopilot-AI-137/","title":"Notes &amp; Decisions \u2014 #137 Major Historian Module Enhancements, Stability Fixes, and Documentation Updates","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/137</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-09-30-dutchsloot84-ReleaseCopilot-AI-115/","title":"Notes &amp; Decisions \u2014 #115 [AWS] OIDC for GitHub Actions \u2192 Least-Privilege Deploy","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/issues/115</p> <ul> <li>Action (Uncategorized) \u2014 2025-09-30 by @dutchsloot84   GitHub Secret Set: The Role ARN is saved in the repository secrets for the CI workflow to consume. Settings &gt; Secrets &amp; Variables &gt; Actions &gt; Repository secret   View comment </li> </ul>"},{"location":"history/notes/2025-09-30-dutchsloot84-ReleaseCopilot-AI-137/","title":"Notes &amp; Decisions \u2014 #137 Major Historian Module Enhancements, Stability Fixes, and Documentation Updates","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/137</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-01-dutchsloot84-ReleaseCopilot-AI-115/","title":"Notes &amp; Decisions \u2014 #115 [AWS] OIDC for GitHub Actions \u2192 Least-Privilege Deploy","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/issues/115</p> <ul> <li>Action (Uncategorized) \u2014 2025-09-30 by @dutchsloot84   GitHub Secret Set: The Role ARN is saved in the repository secrets for the CI workflow to consume. Settings &gt; Secrets &amp; Variables &gt; Actions &gt; Repository secret   View comment </li> </ul>"},{"location":"history/notes/2025-10-01-dutchsloot84-ReleaseCopilot-AI-137/","title":"Notes &amp; Decisions \u2014 #137 Major Historian Module Enhancements, Stability Fixes, and Documentation Updates","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/137</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-02-dutchsloot84-ReleaseCopilot-AI-115/","title":"Notes &amp; Decisions \u2014 #115 [AWS] OIDC for GitHub Actions \u2192 Least-Privilege Deploy","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/issues/115</p> <ul> <li>Action (Uncategorized) \u2014 2025-09-30 by @dutchsloot84   GitHub Secret Set: The Role ARN is saved in the repository secrets for the CI workflow to consume. Settings &gt; Secrets &amp; Variables &gt; Actions &gt; Repository secret   View comment </li> </ul>"},{"location":"history/notes/2025-10-02-dutchsloot84-ReleaseCopilot-AI-137/","title":"Notes &amp; Decisions \u2014 #137 Major Historian Module Enhancements, Stability Fixes, and Documentation Updates","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/137</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Historian will only be invoked via <code>python -m scripts.generate_history</code> with <code>PYTHONPATH</code> set; direct <code>python scripts/...</code> is deprecated.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Notes-mirror promotes PR/Issue markers [Decision|Note|Blocker|Action] into the weekly history ledger.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   Added <code>--debug-scan</code> and guarded <code>--since/--until</code>; updated collectors/templates; Windows-compatible <code>until</code> support.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Update the weekly Historian workflow to the module invocation and ensure <code>permissions: { pull-requests: read, issues: read, contents: read }</code> before the next scheduled run.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   (Owner: Shayne) Run a local dry run to confirm marker capture: <code>python -m scripts.generate_history --since 10d --until now --output docs/history --debug-scan</code> and check the scan log for this comment.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-09-26 by @dutchsloot84   If the scheduled run still uses the old entrypoint or lacks PR read permissions, marker collection will be incomplete; fix workflow invocation/permissions first.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-02-dutchsloot84-ReleaseCopilot-AI-211/","title":"Notes &amp; Decisions \u2014 #211 feat: harden CDK deploy pipeline","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/211</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Use GitHub OIDC for CI/CD (no static keys); add portable CDK runner + npm scripts for cross-platform use.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Pipeline enforces preflight \u2192 synth/diff \u2192 gated deploy.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Replace temp diagnostic job with least-privilege policy templates + composer script.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Preflight reduces failed deploys; docs/changelog updated with IAM hardening guidance.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Infra to attach generated inline policies + detach temp managed ones.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Archive cdk diff outputs on next tag for traceability.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Record ADR for CI identity + least-priv model.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-02-dutchsloot84-ReleaseCopilot-AI-213/","title":"Notes &amp; Decisions \u2014 #213 Improve CDK CI preflight diagnostics","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/213</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   CDK CI workflow now includes explicit workspace diagnostics, cdk.json validation, dependency installs (Node/Python), and a preflight step with cdk doctor before running cdk list.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   If cdk list fails in CI, the workflow now retries with verbose logging and explicit -a app fallback to surface actionable errors.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Documented the preflight process in CI/CD docs and added a changelog entry to guide future contributors.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-02-dutchsloot84-ReleaseCopilot-AI-214/","title":"Notes &amp; Decisions \u2014 #214 Fix CDK CI canonicalization and python3 preflights","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/214</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Canonicalize CDK config to cdk.json and normalize the app to use python3 in CI.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Treat any additional cdk.json outside cdk.json as unsupported for CI.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   CI now installs jq up front, verifies the entrypoint exists, and runs cdk doctor before listing.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   cdk list is retried with verbose logs and an explicit -a \"$APP\" fallback for clearer failures.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Add guardrail script to fail the build if non-canonical cdk.json files are committed.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Document canonical location and preflight expectations for infra contributors.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Remove or migrate any legacy cdk.json files to cdk.json.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Builds will fail until all extra cdk.json files are removed or aligned with the canonical path.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-03-cdk-root-config/","title":"CDK root configuration markers","text":"<ul> <li>Decision: Adopt root-level <code>cdk.json</code> with the <code>python -m infra.cdk.app</code> module entry so CDK always resolves the app from the repository root.</li> <li>Note: GitHub Actions workflows removed every <code>cd infra/cdk</code> hop; all <code>npx cdk</code> commands execute in the root context.</li> <li>Action: Enforce dependency installation via <code>infra/cdk/requirements.txt</code>, keep absolute imports, and ensure <code>infra/cdk/__init__.py</code> exists.</li> <li>Action: Add a diagnostic step (printing <code>$PWD</code> and <code>cdk.json</code>) and optionally use <code>-a \"python -m infra.cdk.app\"</code> during the migration period.</li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-115/","title":"Notes &amp; Decisions \u2014 #115 [AWS] OIDC for GitHub Actions \u2192 Least-Privilege Deploy","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/issues/115</p> <ul> <li>Action (Completed) \u2014 2025-09-30 by @dutchsloot84   GitHub Secret Set: The Role ARN is saved in the repository secrets for the CI workflow to consume. Settings &gt; Secrets &amp; Variables &gt; Actions &gt; Repository secret   View comment </li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-211/","title":"Notes &amp; Decisions \u2014 #211 feat: harden CDK deploy pipeline","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/211</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Use GitHub OIDC for CI/CD (no static keys); add portable CDK runner + npm scripts for cross-platform use.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Pipeline enforces preflight \u2192 synth/diff \u2192 gated deploy.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Replace temp diagnostic job with least-privilege policy templates + composer script.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Preflight reduces failed deploys; docs/changelog updated with IAM hardening guidance.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Infra to attach generated inline policies + detach temp managed ones.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Archive cdk diff outputs on next tag for traceability.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Record ADR for CI identity + least-priv model.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-213/","title":"Notes &amp; Decisions \u2014 #213 Improve CDK CI preflight diagnostics","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/213</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   CDK CI workflow now includes explicit workspace diagnostics, cdk.json validation, dependency installs (Node/Python), and a preflight step with cdk doctor before running cdk list.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   If cdk list fails in CI, the workflow now retries with verbose logging and explicit -a app fallback to surface actionable errors.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Documented the preflight process in CI/CD docs and added a changelog entry to guide future contributors.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-214/","title":"Notes &amp; Decisions \u2014 #214 Fix CDK CI canonicalization and python3 preflights","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/214</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Canonicalize CDK config to infra/cdk/cdk.json and normalize the app to use python3 in CI.   View comment </p> </li> <li> <p>Decision (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Treat any additional cdk.json outside infra/cdk/cdk.json as unsupported for CI.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   CI now installs jq up front, verifies the entrypoint exists, and runs cdk doctor before listing.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   cdk list is retried with verbose logs and an explicit -a \"$APP\" fallback for clearer failures.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Add guardrail script to fail the build if non-canonical cdk.json files are committed.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Document canonical location and preflight expectations for infra contributors.   View comment </p> </li> <li> <p>Action (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Remove or migrate any legacy cdk.json files to infra/cdk/cdk.json.   View comment </p> </li> <li> <p>Blocker (Uncategorized) \u2014 2025-10-02 by @dutchsloot84   Builds will fail until all extra cdk.json files are removed or aligned with the canonical path.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-215/","title":"Notes &amp; Decisions \u2014 #215 Standardize Markers with Block Style","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/issues/215</p> <ul> <li> <p>Decision (Completed) \u2014 2025-10-03 by @dutchsloot84   Adopt block-style markers as the preferred format across Issues/PRs to reduce noise and improve multi-line parsing.   View comment </p> </li> <li> <p>Decision (Completed) \u2014 2025-10-03 by @dutchsloot84   Keep backwards compatibility: inline single-line markers remain valid; the collector parses both.   View comment </p> </li> <li> <p>Decision (Completed) \u2014 2025-10-03 by @dutchsloot84   Normalize output to indented, multi-line bullets in mirrored notes to preserve human readability.   View comment </p> </li> <li> <p>Note (Completed) \u2014 2025-10-03 by @dutchsloot84   Parser handles nested bullets and wrapped lines; leading <code>-</code> or <code>*</code> are supported.   View comment </p> </li> <li> <p>Note (Completed) \u2014 2025-10-03 by @dutchsloot84   Deduping is by (type, text, source URL, date); identical entries won\u2019t be mirrored twice.   View comment </p> </li> <li> <p>Note (Completed) \u2014 2025-10-03 by @dutchsloot84   Performance: parsing added ~O(n) per comment; negligible at current repo scale.   View comment </p> </li> <li> <p>Action (Completed) \u2014 2025-10-03 by @dutchsloot84   (Owner: Shayne) Add the Marker Guide link to the PR/Issue templates\u2019 help text by EOW.   View comment </p> </li> <li> <p>Action (Completed) \u2014 2025-10-03 by @dutchsloot84   (Owner: Shayne) Run the Historian job manually on <code>main</code> to verify end-to-end mirroring today.   View comment </p> </li> <li> <p>Action (Completed) \u2014 2025-10-03 by @dutchsloot84   (Owner: Shayne) Post a one-time FYI in the Contributing doc introducing the new block style today.   View comment </p> </li> </ul>"},{"location":"history/notes/2025-10-04-dutchsloot84-ReleaseCopilot-AI-226/","title":"Notes &amp; Decisions \u2014 #226 Simplify CDK workflow to use root cdk.json","text":"<p>Repo: dutchsloot84/ReleaseCopilot-AI Source: https://github.com/dutchsloot84/ReleaseCopilot-AI/pull/226</p> <ul> <li> <p>Decision (Uncategorized) \u2014 2025-10-03 by @dutchsloot84   Standardize on a single root-level cdk.json with \"app\": \"python -m infra.cdk.app\", and require all CDK commands (local + CI) to run from the repo root.   View comment </p> </li> <li> <p>Note (Uncategorized) \u2014 2025-10-03 by @dutchsloot84   Previous failures (--app is required\u2026) were caused by workflows cd infra/cdk and duplicate/nested cdk.json. This PR removes those patterns and aligns with AWS CDK best practices.   View comment </p> </li> </ul>"},{"location":"runbooks/cdk-synth-deploy/","title":"CDK CI Runbook","text":"<p>This runbook documents how the CDK GitHub Actions workflows operate and how to triage issues quickly. The workflows always run from the repository root so the top-level <code>cdk.json</code> with <code>\"app\": \"python -m infra.cdk.app\"</code> is automatically discovered.</p>"},{"location":"runbooks/cdk-synth-deploy/#workflow-overview","title":"Workflow overview","text":"<ol> <li>Checkout the repository.</li> <li>Provision runtimes: Node.js 20 (jsii requirement) and Python 3.11.</li> <li>Create a virtual environment and install <code>infra/cdk/requirements.txt</code> (plus any root <code>requirements.txt</code> if needed).</li> <li>Install the AWS CDK CLI globally (<code>npm install -g aws-cdk</code>).</li> <li>Diagnose the working directory and confirm that <code>cdk.json</code> exists at the repository root.</li> <li>Run CDK commands from the root: <code>npx cdk list</code>, <code>npx cdk synth</code>, and\u2014once AWS credentials are configured via OIDC\u2014<code>npx cdk diff</code> and <code>npx cdk deploy --require-approval never</code>.</li> </ol>"},{"location":"runbooks/cdk-synth-deploy/#minimal-workflow-snippet","title":"Minimal workflow snippet","text":"<pre><code>- uses: actions/checkout@v4\n\n- uses: actions/setup-node@v4\n  with:\n    node-version: '20'\n\n- uses: actions/setup-python@v5\n  with:\n    python-version: '3.11'\n\n- name: Install CDK &amp; Python deps\n  run: |\n    python -m venv .venv\n    source .venv/bin/activate\n    python -m pip install -U pip\n    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\n    pip install -r infra/cdk/requirements.txt\n    npm install -g aws-cdk\n\n- name: Diagnose working dir &amp; cdk.json\n  run: |\n    set -xeuo pipefail\n    echo \"PWD=$(pwd)\"\n    ls -la\n    echo '--- cdk.json ---'\n    test -f cdk.json &amp;&amp; cat cdk.json || echo 'NO ROOT cdk.json FOUND'\n\n- name: CDK List\n  run: |\n    source .venv/bin/activate\n    npx cdk list\n\n- name: CDK Synth\n  run: |\n    source .venv/bin/activate\n    npx cdk synth\n\n- name: Configure AWS credentials\n  uses: aws-actions/configure-aws-credentials@v4\n  with:\n    role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}\n    aws-region: us-west-2\n\n- name: CDK Diff\n  run: |\n    source .venv/bin/activate\n    npx cdk diff\n\n- name: CDK Deploy\n  run: |\n    source .venv/bin/activate\n    npx cdk deploy --require-approval never\n</code></pre>"},{"location":"runbooks/cdk-synth-deploy/#common-failures-and-fixes","title":"Common failures and fixes","text":"Symptom Likely cause Fix <code>--app is required either in command-line, in cdk.json or in ~/.cdk.json</code> The workflow is not running from the repo root or <code>cdk.json</code> is missing/broken. Ensure all steps execute from <code>${{ github.workspace }}</code> and the root <code>cdk.json</code> includes <code>\"app\": \"python -m infra.cdk.app\"</code>. <code>ModuleNotFoundError: No module named 'aws_cdk'</code> Virtual environment did not install <code>infra/cdk/requirements.txt</code>. Confirm the install step runs after activating the venv and includes <code>pip install -r infra/cdk/requirements.txt</code>. <code>ModuleNotFoundError: No module named 'core_stack'</code> (or similar) Missing <code>infra/cdk/__init__.py</code> or relative imports. Keep <code>infra/cdk/__init__.py</code> in place and use absolute imports like <code>from infra.cdk.core_stack import CoreStack</code>. <p>Following this runbook keeps CI deterministic and mirrors the same commands developers run locally.</p>"},{"location":"runbooks/health_smoke/","title":"ReleaseCopilot Readiness Smoke","text":"<p>This runbook documents the lightweight readiness probe exposed by <code>rc health --readiness</code>. The command validates AWS Secrets Manager access, DynamoDB connectivity, webhook secret resolution, and S3 write/delete permissions. The output is deterministic JSON suitable for CI gates and Historian artifacts.</p>"},{"location":"runbooks/health_smoke/#when-to-run","title":"When to Run","text":"<ul> <li>Before deploying webhook ingest, reconciliation, or audit jobs to a new AWS account.</li> <li>As a CI smoke check in release pipelines.</li> <li>On-demand when rotating secrets or modifying IAM policies.</li> </ul>"},{"location":"runbooks/health_smoke/#invocation","title":"Invocation","text":"<pre><code>rc health --readiness --json dist/health.json\n</code></pre> <p>Optional flags:</p> Flag Description <code>--bucket s3://bucket/prefix</code> Override the bucket/prefix used for the S3 sentinel object. <code>--table TABLE</code> Override the DynamoDB table checked for write/delete access. <code>--secrets name1,name2</code> Restrict the secret identifiers to validate. Names are looked up from <code>config/settings.yaml</code>; unknown entries are treated as literal ARNs. <code>--dry-run</code> Show the execution plan without calling AWS services. <code>--json PATH</code> Write readiness output to <code>PATH</code> instead of stdout. <code>--config PATH</code> Override the settings file used for defaults. <code>--log-level LEVEL</code> Adjust logging verbosity (defaults to <code>INFO</code>)."},{"location":"runbooks/health_smoke/#sample-output","title":"Sample Output","text":"<pre><code>{\n  \"version\": \"health.v1\",\n  \"timestamp\": \"2024-05-01T12:00:00Z\",\n  \"overall\": \"pass\",\n  \"checks\": {\n    \"secrets\": {\n      \"status\": \"pass\",\n      \"resource\": \"secretsmanager://jira=secret/jira, webhook=secret/webhook\"\n    },\n    \"dynamodb\": {\n      \"status\": \"pass\",\n      \"resource\": \"dynamodb://releasecopilot-jira-cache\"\n    },\n    \"s3\": {\n      \"status\": \"pass\",\n      \"resource\": \"s3://releasecopilot-artifacts/readiness/health/readiness/abc123.txt\"\n    },\n    \"webhook_secret\": {\n      \"status\": \"pass\",\n      \"resource\": \"secretsmanager://secret/webhook\"\n    }\n  }\n}\n</code></pre>"},{"location":"runbooks/health_smoke/#json-contract","title":"JSON Contract","text":"<p>The output conforms to <code>docs/schemas/health.v1.json</code>. The schema is validated in CI to prevent breaking changes. Consumers should pin to <code>version == \"health.v1\"</code>.</p>"},{"location":"runbooks/health_smoke/#ci-integration","title":"CI Integration","text":"<pre><code>- name: Readiness Smoke\n  run: |\n    rc health --readiness --json dist/health.json\n</code></pre> <p>Upload <code>dist/health.json</code> with the rest of the release artifacts so Historian can attach the readiness verdict to each deployment.</p>"},{"location":"runbooks/health_smoke/#iam-requirements","title":"IAM Requirements","text":"Service Actions Scope Secrets Manager <code>secretsmanager:GetSecretValue</code> Specific release secrets (e.g. <code>arn:aws:secretsmanager:REGION:ACCOUNT:secret:releasecopilot/*</code>) DynamoDB <code>DescribeTable</code>, <code>PutItem</code>, <code>DeleteItem</code> ReleaseCopilot Jira cache table (e.g. <code>arn:aws:dynamodb:REGION:ACCOUNT:table/releasecopilot-jira-cache</code>) S3 <code>PutObject</code>, <code>DeleteObject</code> Artifact bucket/prefix (e.g. <code>arn:aws:s3:::releasecopilot-artifacts/readiness/*</code>)"},{"location":"runbooks/health_smoke/#troubleshooting","title":"Troubleshooting","text":"Symptom Likely Cause Verification Fix Secrets check fails Missing IAM permission or incorrect ARN Re-run with <code>--dry-run</code> and inspect <code>secrets</code> list. Grant <code>secretsmanager:GetSecretValue</code> on the ARN or correct the value in <code>config/settings.yaml</code>. DynamoDB check fails Wrong table name or region mismatch Run <code>aws dynamodb describe-table --table-name &lt;name&gt;</code> manually. Update the table configuration or IAM policy. S3 check fails Missing write/delete permissions Attempt <code>aws s3 cp</code> with the same prefix. Grant <code>s3:PutObject</code> and <code>s3:DeleteObject</code> on the prefix. Webhook secret empty Environment variable unset or empty secret payload Inspect <code>WEBHOOK_SECRET</code> / <code>WEBHOOK_SECRET_ARN</code> or fetch the secret in the console. Set the environment variable or update the secret payload. Cleanup warning present Delete operation failed (S3 or DynamoDB) Review CloudTrail events for the sentinel key/item. Grant delete permissions or clean up manually."},{"location":"runbooks/health_smoke/#historian-anchors","title":"Historian Anchors","text":"<ul> <li>Store the readiness JSON alongside audit artifacts for traceability.</li> <li>Tag ledger entries with <code>health_schema=health.v1</code> to make future schema migrations explicit.</li> </ul>"},{"location":"runbooks/history-collectors/","title":"Historian Collectors &amp; Notes Mirroring","text":"<p>This runbook explains how to configure the Git Historian collectors and the Notes &amp; Decisions mirroring add-on.</p>"},{"location":"runbooks/history-collectors/#notes-decisions-collector","title":"Notes &amp; Decisions collector","text":"<p>The Notes collector scans comments for configured markers (Decision:, Note:, Blocker:, Action:). You can tune the behaviour in <code>config/defaults.yml</code> under <code>historian.sources.notes</code>:</p> <pre><code>historian:\n  sources:\n    notes:\n      scan_issue_comments: true\n      scan_pr_comments: true\n      scan_notes_files: true\n      notes_glob: \"docs/history/notes/**/*.md\"\n      comment_markers: [\"Decision:\", \"Note:\", \"Blocker:\", \"Action:\"]\n      annotate_group: true\n</code></pre> <ul> <li><code>scan_notes_files</code> controls whether the section surfaces the configured notes directory in the rendered filters so readers know where mirrored files land.</li> <li><code>annotate_group</code> adds the Completed / In Progress / Backlog annotation to each entry.</li> <li>Block-style markers (a <code>Decision:</code> line followed by <code>-</code> bullets) are supported and preferred for PR review threads. See Marker conventions for examples.</li> </ul>"},{"location":"runbooks/history-collectors/#notes-file-mirroring","title":"Notes file mirroring","text":"<p>Enable mirroring with the top-level configuration block:</p> <pre><code>historian:\n  notes_file_mirroring:\n    enabled: true\n    repo_root: \".\"\n    output_dir: \"docs/history/notes\"\n    dry_run: false\n    annotate_group: true\n</code></pre> <ul> <li><code>repo_root</code> is resolved relative to the Historian <code>--root</code> argument. Leave it at <code>.</code> for the repository root.</li> <li><code>output_dir</code> determines where mirrored files are written. The Historian run will create the directory if it does not exist.</li> <li><code>dry_run: true</code> will skip writes while logging the files that would change.</li> <li><code>annotate_group</code> mirrors the group status (Completed / In Progress / Backlog) into the file entries.</li> </ul>"},{"location":"runbooks/history-collectors/#file-naming-format","title":"File naming &amp; format","text":"<p>Each mirrored comment line is appended to a file named:</p> <pre><code>&lt;YYYY-MM-DD&gt;-&lt;owner&gt;-&lt;repo&gt;-&lt;number&gt;.md\n</code></pre> <p>Example entry:</p> <pre><code>- Decision (In Progress) \u2014 2025-09-26 by @octocat\n  Adopt webhook-based sync to reduce polling.\n  [View comment](https://github.com/.../issues/1234#issuecomment-...)\n</code></pre> <p>A hidden digest marker (<code>&lt;!-- digest:... --&gt;</code>) is written next to the comment link to ensure repeated runs remain idempotent.</p>"},{"location":"runbooks/history-collectors/#searching-the-ledger","title":"Searching the ledger","text":"<ul> <li>Use the digest comment to deduplicate manual edits.</li> <li>The <code>_Repo_</code> and <code>_Source_</code> metadata at the top of each file allow quick filtering in editors or <code>rg</code>.</li> <li>Combine the glob from <code>notes_glob</code> with <code>rg \"Decision \\(In Progress\\)\" docs/history/notes</code> to find all active decisions.</li> </ul>"},{"location":"runbooks/history-collectors/#rollback","title":"Rollback","text":"<p>To disable mirroring, set <code>notes_file_mirroring.enabled: false</code> and rerun Historian. To remove mirrored entries, delete the affected files under <code>docs/history/notes/</code> and rerun the workflow.</p>"},{"location":"runbooks/history-pr/","title":"Git Historian Pull Request Runbook","text":"<p>This runbook documents how to unblock the Weekly Git Historian workflow when it needs to push commits and open pull requests using the built-in <code>GITHUB_TOKEN</code>.</p>"},{"location":"runbooks/history-pr/#1-one-time-repository-settings-change","title":"1. One-time repository settings change","text":"<ol> <li>Navigate to Settings \u2192 Actions \u2192 General in the GitHub repository UI.</li> <li>Under Workflow permissions, select Read and write permissions.</li> <li>Check Allow GitHub Actions to create and approve pull requests.</li> <li>Click Save.</li> </ol> <p>These settings ensure the token provided to the workflow has the correct scopes to create branches and open pull requests.</p>"},{"location":"runbooks/history-pr/#2-workflow-configuration","title":"2. Workflow configuration","text":"<p>The workflow must declare the permissions it requires. The Weekly Git Historian workflow already includes:</p> <pre><code>permissions:\n  contents: write\n  pull-requests: write\n</code></pre> <p>If you add new jobs that also need to write to the repository or PRs, ensure they either inherit these defaults or request the scopes explicitly.</p>"},{"location":"runbooks/history-pr/#3-verification","title":"3. Verification","text":"<p>After updating the repository settings, run the workflow manually:</p> <ol> <li>Go to Actions \u2192 Weekly Git Historian.</li> <li>Click Run workflow and keep the default inputs.</li> <li>Confirm that a branch named <code>auto/history-&lt;date&gt;</code> is created and that a pull request is opened by the bot account.</li> </ol> <p>If the workflow still fails with permission errors, re-check the settings above or consider using a PAT stored in <code>secrets.ACTIONS_BOT_TOKEN</code> temporarily.</p>"}]}